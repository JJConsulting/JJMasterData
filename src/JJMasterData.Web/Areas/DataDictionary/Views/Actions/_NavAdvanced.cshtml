@using JJMasterData.Commons.Localization
@using JJMasterData.Core.Web
@model JJMasterData.Core.DataDictionary.Actions.Abstractions.BasicAction

<div class="row">
    <div class="@BootstrapHelper.FormGroup col-sm-6 required">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Expression that returns a Boolean at runtime")">@Translate.Key("Visible Expression")</label>
        @Html.TextBoxFor(model => model.VisibleExpression, new { @class = "form-control" })
    </div>
    <div class="@BootstrapHelper.FormGroup col-sm-6 required">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Expression that returns a Boolean at runtime")">@Translate.Key("Enable Expression")</label>
        @Html.TextBoxFor(model => model.EnableExpression, new { @class = "form-control" })
    </div>
</div>
<div class="row">
    <div class="@BootstrapHelper.FormGroup col-sm-6">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Action execution confirmation text")">@Translate.Key("Confirmation Message")</label>
        @Html.TextBoxFor(model => model.ConfirmationMessage, new { @class = "form-control", placeholder = Translate.Key("Are you sure you want to execute this action?") })
    </div>
    <div class="@BootstrapHelper.FormGroup col-sm-6">
        <label class="@BootstrapHelper.Label">Css @Translate.Key("Class")</label>
        @Html.TextBoxFor(model => model.CssClass, new { @class = "form-control" })
    </div>
</div>
<div class="row">
    <div class="@BootstrapHelper.FormGroup col-sm-2">
        <label class="@BootstrapHelper.Label">@Translate.Key("Order")</label>
        @Html.TextBoxFor(model => model.Order, new { @class = "form-control" })
    </div>

    <div class="@BootstrapHelper.FormGroup col-sm-2">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") data-placement="bottom" title="@Translate.Key("Display name in grid header")">@Translate.Key("Show Title")</label>
        <div class="input-append">
            @Html.CheckBoxFor(model => model.ShowTitle, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
        </div>
    </div>

    <div class="@BootstrapHelper.FormGroup col-sm-2">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") data-placement="bottom" title="Exibir link como botão">@Translate.Key("Show As Button")</label>
        <div class="input-append">
            @Html.CheckBoxFor(model => model.ShowAsButton, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
        </div>
    </div>

    <div class="@BootstrapHelper.FormGroup col-sm-2">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") data-placement="bottom" title="@Translate.Key("Set as default option")">@Translate.Key("Default")</label>
        <div class="input-append">
            @Html.CheckBoxFor(model => model.IsDefaultOption, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
        </div>
    </div>
    <div class="@BootstrapHelper.FormGroup col-sm-2">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") data-placement="bottom" title="@Translate.Key("View Grouped")">@Translate.Key("Is Group")</label>
        <div class="input-append">
            @Html.CheckBoxFor(model => model.IsGroup, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
        </div>
    </div>
    <div class="@BootstrapHelper.FormGroup col-sm-2">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") data-placement="bottom" title="@Translate.Key("Make a menu separator before this action")">@Translate.Key("Divider Line")</label>
        <div class="input-append">
            @Html.CheckBoxFor(model => model.DividerLine, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
        </div>
    </div>

</div>