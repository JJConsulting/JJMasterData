@model JJMasterData.Commons.Dao.Entity.ElementIndex

<script type="text/javascript">
    function cmdSave() {
        var frm = $('form');
        $.ajax({
            url: '@Url.Action("Detail", "Indexes", new { dictionaryName = ViewBag.DictionaryName })',
            data: frm.serialize(),
            type: "POST",
            dataType: "json",
            success: function (response) {
                if (response.success == true) {
                    window.parent.popup.hide();
                    window.parent.location.reload();
                } else {
                    $('#divError').html(response.errorMessage)
                }
            }
        });
    }
</script>

@using (Html.BeginForm())
{
    @Html.Hidden("index", (string)ViewBag.Index)
    <div class="well">
        <div>
            <div class="row">
                <div class="@BootstrapHelper.FormGroup col-sm-8">
                    <label class="@BootstrapHelper.Label " for="VisibleExpression" @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Index Name")">@Translate.Key("IndexName")</label>
                    @Html.TextBox("indexName", (string)ViewBag.IndexName, new { @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-2 required">
                    <label class="@BootstrapHelper.Label " for="IsUnique">@Translate.Key("IsUnique")</label>
                    @Html.DropDownListFor(model => model.IsUnique, new[]
                    {
                        new SelectListItem { Text = Translate.Key("No"), Value = "false" },
                        new SelectListItem { Text = Translate.Key("Yes"), Value = "true" }
                    },
                        new { @class = "form-control" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-2 required">
                    <label class="@BootstrapHelper.Label " for="IsClustered">@Translate.Key("IsClustered")</label>
                    @Html.DropDownListFor(model => model.IsClustered, new[]
                    {
                        new SelectListItem { Text = Translate.Key("No"), Value = "false" },
                        new SelectListItem { Text = Translate.Key("Yes"), Value = "true" }
                    },
                        new { @class = "form-control" })
                </div>

                <div class="col-sm-12">
                    <h4>@Translate.Key("Fields")</h4>
                    <hr/>
                </div>

                <div class="col-sm-12">
                    @{
                        List<SelectListItem> checkBoxList = ViewBag.CheckBoxList;
                        for (int i = 0; i < checkBoxList.Count; i++)
                        {
                            @Html.HiddenFor(c => checkBoxList[i].Value)
                            @Html.HiddenFor(c => checkBoxList[i].Text)
                            @Html.CheckBoxFor(c => checkBoxList[i].Selected)
                            @Html.LabelFor(c => checkBoxList[i].Selected, checkBoxList[i].Text)
                            <br>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div id="divError" class="col-sm-12">

        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <button type="button" class="@BootstrapHelper.DefaultButton btn-small" onclick="cmdSave()">
                <span class="fa fa-check"></span>
                <span>&nbsp;@Translate.Key("Save")</span>
            </button>

            <button type="button" class="@BootstrapHelper.DefaultButton btn-small" onclick="window.parent.popup.hide();">
                <span class="fa fa-times"></span>
                <span>&nbsp;@Translate.Key("Cancel")</span>
            </button>
        </div>
    </div>

    <br/>
    <br/>
}