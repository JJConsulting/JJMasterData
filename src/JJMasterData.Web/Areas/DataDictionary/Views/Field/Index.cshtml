@using JJMasterData.Web.Areas.DataDictionary.Models.ViewModels
@using JJMasterData.Commons.Localization
@using JJMasterData.Core.Web
@using JJMasterData.Core.Web.Components
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model FormElementField


<link href="~/js/codemirror/lib/codemirror.css" rel="stylesheet" />
<link href="~/js/codemirror/addon/hint/show-hint.css" rel="stylesheet" />


@section Scripts{
    <script src="~/js/codemirror/lib/codemirror.js" type="text/javascript"></script>
    <script src="~/js/codemirror/mode/sql/sql.js" type="text/javascript"></script>
    <script src="~/js/codemirror/addon/hint/show-hint.js" type="text/javascript"></script>
    <script src="~/js/codemirror/addon/hint/sql-hint.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            sortableGrid();
            savePanelState();
    
            resizeContainer();
            window.onresize = resizeContainer;
        });
    
        function resizeContainer() {
    
            var buttonBar = document.getElementsByClassName("jjtoolbar");
            let container = document.getElementsByClassName("jjcontainer");
            let containerHeight = 0;
            let windowHeight = 0;
    
            if (buttonBar[0] && container[0]) {
                containerHeight = container[0].offsetHeight + 250;
                windowHeight = window.innerHeight;
                
                if (windowHeight < containerHeight) {
                    buttonBar[0].style.position = "relative";
                } else {
                    buttonBar[0].style.position = "absolute";
                }
            }
        }
    
        function savePanelState() {
            var currentTab = $("#selected_tab").val();
            if (!currentTab) {
                currentTab = "#divGeneral";
            }
            $(".nav a[href='" + currentTab + "']").tab("show");
    
            $("a[@BootstrapHelper.DataToggle='tab']").on("shown.bs.tab", function (e) {
                var target = $(e.target).attr("href");
                $("#selected_tab").val(target);
  
                resizeContainer();
            });
        }
    
        function sortableGrid() {
            $("#sortable_grid").sortable({
                update: function () {
                    var order = $(this).sortable('toArray');
                    cmdMoveAction(order);
                }
            }).disableSelection();
        }
    
        function cmdMoveAction(order) {
            var url = "@Url.Action("Sort", new { dictionaryName = ViewBag.DictionaryName })";
            $.ajax({
                type: "POST",
                url: url,
                data: { orderFields: order },
                success: function (response) {
                    if (!response.success) {
                        messageBox.show("Erro", "Ocorreu um erro inesperado ao ordenar os campos", 4);
                    }
                },
                error: function (xhr, status, error) {
                    messageWait.hide();
                    if (xhr.responseText != "") {
                        var err = JSON.parse(xhr.responseText);
                        //Session expired
                        if (err.status == 401) {
                            document.forms[0].submit();
                        }
                        else {
                            messageBox.show("Atenção", err.message, 4);
                        }
                    }
                    else {
                        messageBox.show("Erro", "Ocorreu um erro inesperado ao ordenar os campos", 4);
                    }
                }
            });
        }
    
        function loadIframe(url, fieldName) {
            $("#sortable_grid a").removeClass("active");
    
            if (fieldName != "")
                $("#" + fieldName).addClass("active");
    
            $.get(url, function (data) {
                $("#fieldDetail").html(data);
                jjloadform(null, "#fieldDetail ");
                savePanelState();
                resizeContainer();
            });
        }
    
        function searchFields(oDom) {
            var value = $(oDom).val().toLowerCase();
            $("#sortable_grid a").filter(function () {
                //procura por textos
                var textValues = $(this).clone().find('.bootstrap-select, .selectpicker, select').remove().end().text();
                var isSearch = textValues.toLowerCase().indexOf(value) > -1;
    
                $(this).toggle(isSearch);
            });
        }
    </script>

}

<partial name="_Menu" model="@(new DataDictionaryViewModel(ViewBag.DictionaryName, ViewBag.MenuId))"/>
@{
    var fieldSearchBox = new JJTextGroup
    {
       Name = "txtFilter",
       PlaceHolder = Translate.Key("Search..."),
       ToolTip = Translate.Key("Filter by any field visible in the list")
    };
    
    fieldSearchBox.Attributes.Add("onkeyup","searchFields(this);");
    fieldSearchBox.Actions.Add(new JJLinkButton
    {
        IconClass = "fa fa-plus",
        OnClientClick = $"loadIframe('{Url.Action("Add", new { dictionaryName = ViewBag.DictionaryName })}', '');"
    });
}

@using (Html.BeginForm("Index", "Field", FormMethod.Post))
{
    <input type="hidden" name="selected_tab" id="selected_tab" value="@ViewBag.Tab" />
    <div class="row">
        <div class="col-sm-3">
            @Html.Raw(fieldSearchBox.GetHtml())
            <br/>
            <div class="jjrelative">
                <div id="listField">
                    <div class="list-group jjsortable" id="sortable_grid">
                        @if (ViewBag.Fields.Count == 0)
                        {
                            <div>@Translate.Key("No record found")</div>
                        }
                        @foreach (FormElementField field in ViewBag.Fields)
                        {
                            string fieldName = field.Name == null ? "nulo" : field.Name;
                            <a href="javascript:loadIframe('@Url.Action("Detail", new { dictionaryName = ViewBag.DictionaryName, fieldName })', '@fieldName' );"
                               class="list-group-item @(fieldName.Equals(Model.Name) ? "active" : "")"
                               id="@fieldName">
                                <div style="height: 33px;">
                                    <div class="@BootstrapHelper.PullLeft">
                                        <b>@fieldName</b>
                                        @if (field.IsPk)
                                        {
                                            <span class="fa fa-star" style="color:#efd829;" title="@Translate.Key("Primary key")"></span>
                                        }
                                        <br>
                                        @{string label = string.Empty;}
                                        @if (field.Label != null)
                                        {
                                            label = field.Label.Replace("<br>", " ").Replace("<BR>", " ").Replace("<br />", " ");
                                            if (label.Length > 35)
                                            {
                                                label = label.Substring(0, 30) + "...";
                                            }
                                        }
                                        @label
                                    </div>
                                    <div class="@BootstrapHelper.PullRight jjsortable-icon" title="@Translate.Key("Drag and drop to move")">
                                    </div>
                                    <span class="@BootstrapHelper.PullRight jjsortable-span" title="@Translate.Key("Drag and drop to move")">
                                        @field.Order.ToString()
                                    </span>
                                </div>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-9" style="padding-left:0px">
            <div class="jjrelative" id="fieldDetail">
                <partial name="_Detail" model="Model"/>
            </div>
        </div>
        <br />
    </div>
}

