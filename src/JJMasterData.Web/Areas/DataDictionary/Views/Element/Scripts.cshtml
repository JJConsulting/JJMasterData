@using Microsoft.AspNetCore.Html
@{
    Layout = "_Layout.Popup";
}

@{

    IHtmlContent GetIdBs3(string name)
    {
        return BootstrapHelper.Version > 3 ? Html.Raw("id=\"" + name + "\"") : null;
    }

    IHtmlContent GetIdBs4(string name)
    {
        return BootstrapHelper.Version > 3 ? Html.Raw("id=\"" + name + "\"") : null;
    }
}

<style>
        .bs-clipboard {
            position: absolute;
            right: 15px;
        }
    
            .bs-clipboard button.btn-default {
                background-color: inherit;
            }
</style>

<div class="row">
    <div class="col-sm-4">
        <button type="button" class="@BootstrapHelper.DefaultButton btn-small" onclick="window.parent.popup.hide();">
            <span>&nbsp;Close</span>
        </button>
        <button id="btnCopy" type="button" class="@BootstrapHelper.DefaultButton btn-small" onclick="copyAll();" data-placement="right" 
                @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Copy All Scripts")">
            <span class="fa fa-copy fa-fw"></span>
            &nbsp;@Translate.Key("Copy All")
        </button>
    </div>
    @if (!ViewBag.IsDefault)
    {
        <div class="col-sm-8 @BootstrapHelper.TextRight">
            <button class="@BootstrapHelper.DefaultButton btn-small" type="button" value="Exec" onclick="executeScripts(this.value)">
                <span class="fa fa-play"></span>
                <span>&nbsp; @Translate.Key("Execute Stored Procedures")</span>
            </button>

            <button class="@BootstrapHelper.DefaultButton btn-small" type="button" value="ExecAll" onclick="executeScripts(this.value)">
                <span class="fa fa-forward"></span>
                <span>&nbsp; @Translate.Key("Run All")</span>
            </button>
        </div>
    }
</div>
<br />
<div class="bs-clipboard">
    <button id="btnCopyContent" type="button" class="@BootstrapHelper.DefaultButton btn-small" onclick="copyContent();" data-placement="top" @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Copy to Clipboard")">
        <span class="fa fa-copy fa-fw"></span>
        &nbsp;@Translate.Key("Copy")
    </button>
</div>
<ul class="nav nav-tabs" id="tabScript">
    <li class="nav-item @(BootstrapHelper.Version == 3 ? "active" : string.Empty)" @GetIdBs3("Table")>
        <a @GetIdBs4("Table") class="nav-link @(BootstrapHelper.Version > 3 ? "active" : string.Empty)" @BootstrapHelper.GetDataToggle("tab") href="#divTable">@Translate.Key("Table")</a>
    </li>
    <li class="nav-item" @GetIdBs3("ProcGet")>
        <a @GetIdBs4("ProcGet") class="nav-link" @BootstrapHelper.GetDataToggle("tab") href="#divProcGet">
            @Translate.Key("Get Procedure")
        </a>
    </li>
    <li class="nav-item" @GetIdBs3("ProcSet")>
        <a @GetIdBs4("ProcSet") class="nav-link" @BootstrapHelper.GetDataToggle("tab") href="#divProcSet">
            @Translate.Key("Set Procedure")
        </a>
    </li>
</ul>

<div class="tab-content">

    <div id="divTable" class="tab-pane fade in active show">
        <pre><code>@ViewBag.Scripts[0]</code></pre>
    </div>
    <div id="divProcGet" class="tab-pane fade">
        <pre>
        <code>@ViewBag.Scripts[1]</code>     
        </pre>
    </div>
    <div id="divProcSet" class="tab-pane fade">
        <pre>
        <code>@ViewBag.Scripts[2]</code>
</pre>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript" src="~/js/highlightjs/highlight.min.js"></script>
    <script type="text/javascript" src="~/js/highlightjs/languages/tsql.min.js"></script>
    <script type="text/javascript">
    
    function copyAll() {
            var textVal;
            textVal = document.getElementById("divTable").textContent.trim();
            textVal += "\r\n";
            textVal += document.getElementById("divProcGet").textContent.trim();
            textVal += "\r\n";
            textVal += document.getElementById("divProcSet").textContent.trim();
            copyText(textVal);
    
            $("#btnCopy").attr('title', 'Copied!')
                .tooltip('fixTitle')
                .tooltip('show')
                .attr('title', "Copy to Clipboard")
                .tooltip('fixTitle');
        }
    
        function copyContent() {
            var objName = $("#tabScript .active").attr("id");
            var textVal = document.getElementById("div" + objName).textContent.trim();
            copyText(textVal);
    
            $("#btnCopyContent").attr('title', 'Copied!')
                .tooltip('fixTitle')
                .tooltip('show')
                .attr('title', "Copy to Clipboard")
                .tooltip('fixTitle');
        }
    
    
        function copyText(value) {
            const textArea = document.createElement('textarea');
            textArea.textContent = value;
            document.body.append(textArea);
            textArea.select();
            textArea.setSelectionRange(0, 99999); /*For mobile devices*/
            document.execCommand("copy");
            textArea.remove();
       }
    
        function executeScripts(value) {
             $.ajax({
                url: '@Url.Action("Scripts", "Element", new { dictionaryName = ViewBag.DictionaryName })',
                type: 'POST',
                data: {
                    scriptExec: value
                },
                dataType: 'json',
                success: function (response) {
                    window.parent.popup.hide();
                 },
                 error: function (xhr, status, error) {
                     messageWait.hide();
                     if (xhr.responseText != "") {
                         var err = JSON.parse(xhr.responseText);
    
                         if (err.status == 401) {
                             window.parent.forms[0].submit();
                         }
                         else {
                             messageBox.show("Atenção", err.message, 4);
                         }
                     }
                     else {
                         messageBox.show("Erro","Ocorreu. um erro inesperado executar scripts", 4);
                     }
                 }
            });
        }
    
        hljs.highlightAll();
    </script>
}
