@using JJMasterData.Web.Areas.DataDictionary.Models
@model List<JJMasterData.Commons.Dao.Entity.ElementRelation>


@section Scripts{
    <script type="text/javascript">
    
        function deleteRelation(url){
            if (confirm('Are you sure you want to delete this relationship?')) {
                $.post(url)
            }
        }
        
        document.addEventListener("DOMContentLoaded", function() {
            document.getElementById("filter").addEventListener('keyup', function() {
                let input, filter, table, tr, td, i, txtValue;
                input = document.getElementById("filter");
                filter = input.value.toUpperCase();
                table = document.getElementById("relationTable");
                tr = table.getElementsByTagName("tr");
                for (i = 0; i < tr.length; i++) {
                    td = tr[i].getElementsByTagName("td")[0];
                    if (td) {
                        txtValue = td.textContent || td.innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                        } else {
                            tr[i].style.display = "none";
                        }
                    }
                }
            })
        });
    
    </script>
}

<partial name="_Menu" model="@(new DataDictionaryViewModel(ViewBag.DictionaryName, ViewBag.MenuId))"/>

    @{
    var filterTextGroup = new JJTextGroup();
    filterTextGroup.Name = "filter";
    filterTextGroup.PlaceHolder = Translate.Key("Search...");
    filterTextGroup.Actions.Add(new JJLinkButton
    {
        OnClientClick = null,
        IconClass = "fa fa-search"
    });
}

@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-sm-8">
            <button type="button" class="@BootstrapHelper.DefaultButton btn-small" onclick="popup.show('ElementRelation', '@Url.Action("Detail","Relations",new {dictionaryName = ViewBag.DictionaryName })');">
                <span class="fa fa-plus-circle"></span>
                <span>&nbsp;@Translate.Key("New")</span>
            </button>
        </div>
        <div class="col-sm-4">
            @Html.Raw(filterTextGroup.GetHtml())
        </div>
    </div>
    <br />

    <table id="relationTable" class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th scope="col">@Translate.Key("ChildElement")</th>
                <th scope="col">@Translate.Key("Columns")</th>
                <th scope="col">@Translate.Key("UpdateOnCascade")</th>
                <th scope="col">@Translate.Key("DeleteOnCascade")</th>
                <th scope="col">&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count > 0)
            {
                int index = 0;
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.ChildElement
                            @Html.HiddenFor(model => model[index].ChildElement)
                        </td>
                        <td>
                            @for (int i = 0; i < item.Columns.Count; i++)
                            {
                                @Html.HiddenFor(model => model[index].Columns[i].PkColumn)
                                @Html.HiddenFor(model => model[index].Columns[i].FkColumn)

                                if (i > 0)
                                {
                                    <text><br />@(item.Columns[i].PkColumn + " -> " + item.Columns[i].FkColumn)</text>
                                }
                                else
                                {
                                    <text>@(item.Columns[i].PkColumn + " -> " + item.Columns[i].FkColumn)</text>
                                }
                            }
                        </td>
                        <td>
                            @item.UpdateOnCascade
                            @Html.HiddenFor(model => model[index].UpdateOnCascade)
                        </td>
                        <td>
                            @item.DeleteOnCascade
                            @Html.HiddenFor(model => model[index].DeleteOnCascade)
                        </td>
                        <td align="center" valign="middle" width="180px">
                            <button type="submit" @BootstrapHelper.GetDataToggle("tooltip") title="" class="btn btn-link" formaction="@Url.Action("MoveUp","Relations", new {dictionaryName = ViewBag.DictionaryName,index })" data-original-title="@Translate.Key("Move Up")">
                                <span class="fa fa-arrow-up"></span>
                            </button>
                            <button type="submit" @BootstrapHelper.GetDataToggle("tooltip") title="" class="btn btn-link" formaction="@Url.Action("MoveDown","Relations", new {dictionaryName = ViewBag.DictionaryName,index })" data-original-title="@Translate.Key("Move Down")">
                                <span class="fa fa-arrow-down"></span>
                            </button>
                            <button type="button" @BootstrapHelper.GetDataToggle("tooltip") title="" class="btn btn-link" onclick="popup.show('ElementRelation', '@Url.Action("Detail","Relations",new {dictionaryName = ViewBag.DictionaryName,index })');" data-original-title="@Translate.Key("Edit")">
                                <span class="fa fa-pencil"></span>
                            </button>
                            <button type="submit" @BootstrapHelper.GetDataToggle("tooltip") title="" class="btn btn-link" onclick="deleteRelation('@Url.Action("Delete","Relations", new {dictionaryName = ViewBag.DictionaryName,index})')" data-original-title="@Translate.Key("Delete")">
                                <span class="fa fa-trash"></span>
                            </button>
                        </td>
                    </tr>
                    index++;
                }

            }
            else
            {
                <tr>
                    <td colspan="5">
                        @Translate.Key("No data records found")
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <br />

}
