@using JJMasterData.Commons.Localization
@using JJMasterData.Core.Web
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model FormElementPanel

<script lang="javascript" type="text/javascript">

    $(document).ready(function () {
        saveOptions();
    });

    function save() {
        messageWait.show();
        var url = "@Url.Action("Save", new { dictionaryName = ViewBag.DictionaryName })";
        $("form:first").attr("action", url).submit();
    }

    function copy() {
        messageWait.show();
        var url = "@Url.Action("Copy", new { dictionaryName = ViewBag.DictionaryName })";
        $("form:first").attr("action", url).submit();
    }

    function showSuccess(fieldName) {
        $(document).ready(function () {
            $("#divSuccess").css("display", "");
            window.parent.$('#current_field').val(fieldName);
            window.parent.cmdRefresh();
        });
    }


    function addFields() {
        $('#listEnabled option:selected').remove().appendTo('#listSelected');
        saveOptions();
    }

    function saveOptions() {
        var listEnabled = "";
        $('#listEnabled option').each(function () {
            if (listEnabled.length > 0)
                listEnabled = listEnabled.concat(",");

            listEnabled = listEnabled.concat($(this).val());
        });
        $("#enabled_fields").val(listEnabled);


        var listSelected = "";
        $('#listSelected option').each(function () {
            if (listSelected.length > 0)
                listSelected = listSelected.concat(",");

            listSelected = listSelected.concat($(this).val());
        });
        console.log(listSelected);
        $("#selectedFields").val(listSelected);
    }

    function removeFields() {
        $('#listSelected option:selected').remove().appendTo('#listEnabled');
        saveOptions();
    }

    function moveUp() {
        $('#listSelected option:selected:first-child').prop("selected", false);
        before = $('#listSelected option:selected:first').prev();
        $('#listSelected option:selected').detach().insertBefore(before);
        saveOptions();
    }

    function moveDown() {
        $('#listSelected option:selected:last-child').prop("selected", false);
        after = $('#listSelected option:selected:last').next();
        $('#listSelected option:selected').detach().insertAfter(after);
        saveOptions();
    }

</script>


<div class="container-fluid jjcontainer">

    <ul class="nav nav-tabs">
        <li id="navGeneral" class="nav-item">
            <a class="nav-link" @BootstrapHelper.GetDataToggle("tab") href="#divGeneral">@Translate.Key("General")</a>
        </li>
        <li id="navAdvanced" class="nav-item">
            <a class="nav-link" @BootstrapHelper.GetDataToggle("tab") href="#divAdvanced">@Translate.Key("Advanced")</a>
        </li>
    </ul>

    @Html.HiddenFor(model => model.PanelId)
    <div class="tab-content" style="margin-top: 20px;">
        <div id="divGeneral" class="tab-pane fade">
            <div class="row">
                <div class="@BootstrapHelper.FormGroup col-sm-4 required">
                    <label class="@BootstrapHelper.Label" for="cboLayout" @BootstrapHelper.GetDataToggle("tooltip")>@Translate.Key("Layout")</label>
                    <select asp-for="Layout" class="form-control form-select" asp-items="Html.GetEnumSelectList<PanelLayout>()"></select>
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-4 required">
                    <label class="@BootstrapHelper.Label" for="cboColor" @BootstrapHelper.GetDataToggle("tooltip")>@Translate.Key("Color")</label>
                    <select asp-for="Color" class="form-control form-select" asp-items="Html.GetEnumSelectList<PanelColor>()"></select>
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-4 required" id="divExpandedByDefault">
                    <label class="@BootstrapHelper.Label" for="cboExpandedByDefault" @BootstrapHelper.GetDataToggle("tooltip")>@Translate.Key("Expanded By Default")</label>
                    @Html.DropDownListFor(modelItem => modelItem.ExpandedByDefault, new[]
                    {
                        new SelectListItem { Text = Translate.Key("Yes"), Value = "true" },
                        new SelectListItem { Text = Translate.Key("No"), Value = "false" }
                    },
                        new { @class = "form-control form-select" })
                </div>
            </div>
            <div class="row">
                <div class="@BootstrapHelper.FormGroup col-sm-4">
                    <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="Painel Title">@Translate.Key("Title")</label>
                    @Html.TextBoxFor(model => model.Title, new { maxlength = "64", @class = "form-control" })
                </div>

                <div class="@BootstrapHelper.FormGroup col-sm-8">
                    <label class="@BootstrapHelper.Label">@Translate.Key("Sub Title")</label>
                    @Html.TextBoxFor(model => model.SubTitle, new { @class = "form-control" })
                </div>

                <div class="@BootstrapHelper.FormGroup col-sm-12">
                    <table style="border:0px;width:100%">
                        <tr>
                            <td style="width:45%">
                                <label class="@BootstrapHelper.Label">@Translate.Key("Available Fields")</label>
                            </td>
                            <td style="width:70px"></td>
                            <td style="width:50%">
                                <label class="@BootstrapHelper.Label required">@Translate.Key("Selected Fields")</label>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <select size="10" name="listEnabled" id="listEnabled" multiple="multiple" class="form-control form-select" ondblclick="addFields()">
                                    @foreach (FormElementField f in ViewBag.AvailableFields)
                                    {
                                        if (f.PanelId == 0)
                                        {
                                            <option value="@f.Name">@f.Name</option>
                                        }
                                    }
                                </select>
                            </td>
                            <td align="middle">
                                <button type="button" class="@BootstrapHelper.DefaultButton btn-small" @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Select")" onclick="addFields();">
                                    <span class="fa fa-angle-double-right fa-fw fa-fw"></span>
                                </button>
                                <br/>
                                <button type="button" class="@BootstrapHelper.DefaultButton btn-small" @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Remove")" onclick="removeFields();">
                                    <span class="fa fa-angle-double-left fa-fw fa-fw"></span>
                                </button>
                            </td>
                            <td>
                                <div class="input-group">
                                    <select size="10" name="listSelected" id="listSelected" multiple="multiple" class="form-control form-select" ondblclick="removeFields()">
                                        @foreach (FormElementField f in ViewBag.SelectedFields)
                                        {
                                            if (f.PanelId == Model.PanelId)
                                            {
                                                <option value="@f.Name">@f.Name</option>
                                            }
                                        }
                                    </select>
                                    <span class="input-group-btn">
                                        <button type="button" class="@BootstrapHelper.DefaultButton btn-small" @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Move up")" onclick="moveUp();">
                                            <span class="fa fa-arrow-circle-up fa-fw fa-fw"></span>
                                        </button>
                                        <br/>
                                        <button type="button" class="@BootstrapHelper.DefaultButton btn-small" @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Move down")" onclick="moveDown();">
                                            <span class="fa fa-arrow-circle-down fa-fw fa-fw"></span>
                                        </button>
                                    </span>
                                </div>
                            </td>
                        </tr>

                    </table>
                </div>

            </div>
        </div>

        <div id="divAdvanced" class="tab-pane fade">
            <div class="row">
                <div class="@BootstrapHelper.FormGroup col-sm-12 required">
                    <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Expression that returns a Boolean at runtime")">@Translate.Key("Visible Expression")</label>
                    @Html.TextBoxFor(model => model.VisibleExpression, new { @class = "form-control" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-12 required">
                    <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Expression that returns a Boolean at runtime")">@Translate.Key("Enable Expression")</label>
                    @Html.TextBoxFor(model => model.EnableExpression, new { @class = "form-control" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-4">
                    <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@Translate.Key("Class name (CSS) to be added when rendering the object group")">@Translate.Key("CssClass")</label>
                    @Html.TextBoxFor(model => model.CssClass, new { @class = "form-control" })
                </div>
            </div>
        </div>

    </div>

    <div class="row">
        <div class="col-sm-12">
            @Html.Raw(ViewBag.Error)
        </div>

        <div class="col-sm-12">
            <div id="divSuccess" class="alert alert-success alert-dismissible" role="alert" style="display:none">
                <button type="button" class="@BootstrapHelper.Close" @BootstrapHelper.GetDataDismiss("alert") aria-label="Close">
                    <span aria-hidden="true">@BootstrapHelper.CloseButtonTimes</span>
                </button>
                <strong>@Translate.Key("Sucesso!")</strong> @Translate.Key("Record saved successfully.")
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12 jjtoolbar">

            <button type="button" class="btn btn-primary btn-small" onclick="save();">
                <span class="fa fa-check"></span>
                <span>&nbsp;@Translate.Key("Save")</span>
            </button>

            <a class="@BootstrapHelper.DefaultButton btn-small" href="@Url.Action("Index", new { dictionaryName = ViewBag.DictionaryName, panelId = Model.PanelId })">
                <span class="fa fa-refresh fa-fw fa-fw"></span>
                <span>&nbsp;@Translate.Key("Refresh")</span>
            </a>

            <a class="@BootstrapHelper.DefaultButton btn-small" href="@Url.Action("Delete", new { dictionaryName = ViewBag.DictionaryName, panelId = Model.PanelId })">
                <span class="fa fa-trash"></span>
                <span>&nbsp;@Translate.Key("Delete")</span>
            </a>

            <button type="button" class="@BootstrapHelper.DefaultButton btn-small" onclick="copy();">
                <span class="fa fa-files-o fa-fw fa-fw"></span>
                <span>&nbsp;@Translate.Key("Copy")</span>
            </button>

        </div>
    </div>


</div>