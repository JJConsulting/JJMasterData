@using JJMasterData.Web.Areas.DataDictionary.Models.ViewModels
@using JJMasterData.Commons.Localization
@using JJMasterData.Core.Web
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model FormElementPanel

<script type="text/javascript">
    $(document).ready(function () {
        sortableGrid();
        savePanelState();

        resizeContainer();
        window.onresize = resizeContainer;
    });

    function resizeContainer() {

        var buttonBar = document.getElementsByClassName("jjtoolbar");
        let container = document.getElementsByClassName("jjcontainer");
        let containerHeight = 0;
        let windowHeight = 0;

        if (buttonBar[0] && container[0]) {
            containerHeight = container[0].offsetHeight + 250;
            windowHeight = window.innerHeight;

            if (windowHeight < containerHeight) {
                buttonBar[0].style.position = "relative";
            } else {
                buttonBar[0].style.position = "absolute";
            }
        }
    }

    function savePanelState() {
        var currentTab = $("#selected_tab").val();
        if (!currentTab) {
            currentTab = "#divGeneral";
        }
        $(".nav a[href='" + currentTab + "']").tab("show");

        $("a[@BootstrapHelper.DataToggle='tab']").on("shown.bs.tab", function (e) {
            var target = $(e.target).attr("href");
            $("#selected_tab").val(target);
            resizeContainer();
        });
    }

    function sortableGrid() {
        $("#sortable_grid").sortable({
            update: function () {
                var order = $(this).sortable('toArray');
                cmdMoveAction(order);
            }
        }).disableSelection();
    }

    function cmdMoveAction(order) {
        var url = "@Url.Action("Sort", new { dictionaryName = ViewBag.DictionaryName })";
        $.ajax({
            type: "POST",
            url: url,
            data: { orderFields: order },
            success: function (response) {
                if (!response.success) {
                    messageBox.show("Erro", "Ocorreu um erro inesperado ao ordenar os campos", 4);
                }
            },
            error: function (xhr, status, error) {
                messageWait.hide();
                if (xhr.responseText != "") {
                    var err = JSON.parse(xhr.responseText);
                    //Session expired
                    if (err.status == 401) {
                        document.forms[0].submit();
                    }
                    else {
                        messageBox.show("Atenção", err.message, 4);
                    }
                }
                else {
                    messageBox.show("Erro", "Ocorreu um erro inesperado ao ordenar os campos", 4);
                }
            }
        });
    }

    function loadIframe(url, panelId) {
        $("#sortable_grid a").removeClass("active");

        if (panelId != "")
            $("#" + panelId).addClass("active");

        $.get(url, function (data) {
            $("#fieldDetail").html(data);
            jjloadform(null, "#fieldDetail ");
            savePanelState();
            resizeContainer();
        });
    }

    function searchFields(oDom) {
        var value = $(oDom).val().toLowerCase();
        $("#sortable_grid a").filter(function () {
            //procura por textos
            var textValues = $(this).clone().find('.bootstrap-select, .selectpicker, select').remove().end().text();
            var isSearch = textValues.toLowerCase().indexOf(value) > -1;

            $(this).toggle(isSearch);
        });
    }
</script>

<partial name="_Menu" model="@(new DataDictionaryViewModel(ViewBag.DictionaryName, ViewBag.MenuId))"/>

@using (Html.BeginForm())
{
    <input type="hidden" name="selected_tab" id="selected_tab" value="@ViewBag.Tab"/>
    <input type="hidden" name="selectedFields" id="selectedFields" value="@Context.Request.Query["selectedFields"]"/>
    <input type="hidden" name="enabled_fields" id="enabled_fields" value="@Context.Request.Query["enabled_fields"]"/>

    <div class="row">
        <div class="col-sm-3">
            <div class="input-group jjsearch" style="margin-bottom: 15px;margin-top: 1px;">
                <span class="input-group-btn">
                    <button type="button" class="@BootstrapHelper.DefaultButton" onclick="loadIframe('@Url.Action("Add", new { dictionaryName = ViewBag.DictionaryName })', '');">
                        <span class="fa fa-plus"></span>
                    </button>
                </span>
                <input class="form-control"
                       type="search"
                       @BootstrapHelper.GetDataToggle("tooltip")
                       title="@Translate.Key("Filter by any field visible in the list")"
                       placeholder="@Translate.Key("Search...")"
                       id="txtFilter"
                       name="txtFilter"
                       onkeyup="searchFields(this);"/>
            </div>
            <div class="jjrelative">
                <div id="listField">
                    <div class="list-group jjsortable" id="sortable_grid">
                        @{int nLine = 0;}
                        @if (ViewBag.Panels.Count == 0)
                        {
                            <div>@Translate.Key("No record found")</div>
                        }
                        @foreach (FormElementPanel panel in ViewBag.Panels)
                        {
                            nLine++;
                            <a href="javascript:loadIframe('@Url.Action("Detail", new { dictionaryName = ViewBag.DictionaryName, panelId = panel.PanelId })', '@panel.PanelId' );"
                               class="list-group-item @(panel.PanelId.Equals(Model.PanelId) ? "active" : "")"
                               id="@panel.PanelId">
                                <div style="height: 33px;">
                                    <div class="@BootstrapHelper.PullLeft">
                                        <b>@panel.Title</b>
                                        <br>
                                        @panel.Layout.ToString()
                                    </div>
                                    <div class="@BootstrapHelper.PullRight jjsortable-icon" title="@Translate.Key("Drag and drop to move")">
                                    </div>
                                    <span class="@BootstrapHelper.PullRight jjsortable-span" title="@Translate.Key("Drag and drop to move")">
                                        @nLine.ToString()
                                    </span>
                                </div>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-9" style="padding-left:0px">
            <div class="jjrelative" id="fieldDetail">
                @await Html.PartialAsync("_Detail", Model)
            </div>
        </div>
        <br/>
    </div>
}