@using JJMasterData.Core.Web
@using JJMasterData.Commons.Localization
@using JJMasterData.Core.Web.Components
@model JJMasterData.Web.Areas.DataDictionary.Models.ViewModels.RelationshipsListViewModel


<script type="text/javascript">
             function deleteRelationship(url) {
                     if (confirm('Are you sure you want to delete this relationship?')) {
                         fetch(url, {
                             method: 'DELETE'
                         })
                         .catch(error => {
                             console.log(error)
                         });
                     }
                 }
    </script>




<div class="row">
    <div class="col-sm-8">
        <jj-link-button icon="PlusCircle"
                        text="@Translate.Key("New")"
                        type="LinkButtonType.Button"
                        on-client-click="popup.show('@Translate.Key("New Relation")', '@Url.Action("ElementDetails", "Relationships", new { dictionaryName = Model.DictionaryName })');"/>
    </div>
</div>
<br/>

<table id="relationshipsTable" class="table table-striped table-hover">
    <thead>
    <tr>
        <th scope="col">@Translate.Key("Relation")</th>
        <th scope="col">@Translate.Key("Columns")</th>
        <th scope="col">@Translate.Key("UpdateOnCascade")</th>
        <th scope="col">@Translate.Key("DeleteOnCascade")</th>
        <th scope="col">&nbsp;</th>
    </tr>
    </thead>
    <tbody>
    @if (Model.Relationships.Any())
    {
        var list = Model.Relationships.GetElementRelationships();
        for (var index = 0; index < list.Count; index++)
        {
            var item = list[index];
            <tr>
                <td>
                    <a href="@Url.Action("Index", "Entity", new { dictionaryName = item.ChildElement })" target="_blank">@item.ChildElement</a>
                    @Html.HiddenFor(model => model.Relationships[index].ElementRelationship.ChildElement)
                </td>
                <td>
                    @for (var j = 0; j < item.Columns.Count; j++)
                    {
                        @Html.HiddenFor(model => model.Relationships[index].ElementRelationship.Columns[j].PkColumn)
                        @Html.HiddenFor(model => model.Relationships[index].ElementRelationship.Columns[j].FkColumn)
                        @item.Columns[j].PkColumn
                        <i class="fa-solid fa-arrow-right"></i>
                        @item.Columns[j].FkColumn

                        <br/>
                    }
                </td>
                <td>
                    @item.UpdateOnCascade
                    @Html.HiddenFor(model => model.Relationships[index].ElementRelationship.UpdateOnCascade)
                </td>
                <td>
                    @item.DeleteOnCascade
                    @Html.HiddenFor(model => model.Relationships[index].ElementRelationship.DeleteOnCascade)
                </td>
                <td style="text-align: center;">
                    <button type="button" @BootstrapHelper.GetDataToggle("tooltip") title="" class="btn btn-link"
                            onclick="popup.show('@Translate.Key("Edit Relation")', '@Url.Action("ElementDetails", "Relationships", new { dictionaryName = Model.DictionaryName, selectedIndex = index })');"
                            data-original-title="@Translate.Key("Edit")">
                        <span class="fa fa-pencil"></span>
                    </button>
                    <button type="submit" @BootstrapHelper.GetDataToggle("tooltip") title="" class="btn btn-link"
                            onclick="deleteRelationship('@Url.Action("Delete", "Relationships", new { dictionaryName = Model.DictionaryName, selectedIndex = index })')"
                            data-original-title="@Translate.Key("Delete")">
                        <span class="fa fa-trash"></span>
                    </button>
                </td>
            </tr>
        }
    }

    </tbody>
</table>

@if (!Model.Relationships.Any())
{
    <jj-alert color="Default" show-close-button="false">
        @Translate.Key("No relationships found.")
    </jj-alert>
}