!function (t) { "use strict"; var e = function (e, i) { t.fn.typeahead.defaults; i.scrollBar && (i.items = 100, i.menu = '<ul class="typeahead dropdown-menu" style="max-height:220px;overflow:auto;"></ul>'); if (this.$element = t(e), this.options = t.extend({}, t.fn.typeahead.defaults, i), this.$menu = t(this.options.menu).insertAfter(this.$element), this.eventSupported = this.options.eventSupported || this.eventSupported, this.grepper = this.options.grepper || this.grepper, this.highlighter = this.options.highlighter || this.highlighter, this.lookup = this.options.lookup || this.lookup, this.matcher = this.options.matcher || this.matcher, this.render = this.options.render || this.render, this.onSelect = this.options.onSelect || null, this.sorter = this.options.sorter || this.sorter, this.select = this.options.select || this.select, this.source = this.options.source || this.source, this.displayField = this.options.displayField || this.displayField, this.valueField = this.options.valueField || this.valueField, this.autoSelect = this.options.autoSelect || this.autoSelect, this.options.ajax) { var s = this.options.ajax; "string" == typeof s ? this.ajax = t.extend({}, t.fn.typeahead.defaults.ajax, { url: s }) : ("string" == typeof s.displayField && (this.displayField = this.options.displayField = s.displayField), "string" == typeof s.valueField && (this.valueField = this.options.valueField = s.valueField), this.ajax = t.extend({}, t.fn.typeahead.defaults.ajax, s)), this.ajax.url || (this.ajax = null), this.query = "" } else this.source = this.options.source, this.ajax = null; this.shown = !1, this.listen() }; e.prototype = { constructor: e, eventSupported: function (t) { var e = t in this.$element; return e || (this.$element.setAttribute(t, "return;"), e = "function" == typeof this.$element[t]), e }, select: function () { var t = this.$menu.find(".active"); if (t.length) { var e = t.attr("data-value"), i = this.$menu.find(".active a").text(); this.$element.val(this.updater(i)).change(), this.options.onSelect && this.options.onSelect({ value: e, text: i }) } return this.hide() }, updater: function (t) { return t }, show: function () { var e = t.extend({}, this.$element.position(), { height: this.$element[0].offsetHeight }); if (this.$menu.css({ top: e.top + e.height, left: e.left }), this.options.alignWidth) { var i = t(this.$element[0]).outerWidth(); this.$menu.css({ width: i }) } return this.$menu.show(), this.shown = !0, this }, hide: function () { return this.$menu.hide(), this.shown = !1, this }, ajaxLookup: function () { var e = t.trim(this.$element.val()); if (e === this.query) return this; if (this.query = e, this.ajax.timerId && (clearTimeout(this.ajax.timerId), this.ajax.timerId = null), !e || e.length < this.ajax.triggerLength) return this.ajax.xhr && (this.ajax.xhr.abort(), this.ajax.xhr = null, this.ajaxToggleLoadClass(!1)), this.shown ? this.hide() : this; return this.ajax.timerId = setTimeout(t.proxy(function () { this.ajaxToggleLoadClass(!0), this.ajax.xhr && this.ajax.xhr.abort(); var i = this.ajax.preDispatch ? this.ajax.preDispatch(e) : { query: e }; this.ajax.xhr = t.ajax({ url: this.ajax.url, data: i, success: t.proxy(this.ajaxSource, this), type: this.ajax.method || "get", dataType: "json", headers: this.ajax.headers || {} }), this.ajax.timerId = null }, this), this.ajax.timeout), this }, ajaxSource: function (t) { this.ajaxToggleLoadClass(!1); var e; if (this.ajax.xhr) return this.ajax.preProcess && (t = this.ajax.preProcess(t)), this.ajax.data = t, (e = this.grepper(this.ajax.data) || []).length ? (this.ajax.xhr = null, this.render(e.slice(0, this.options.items)).show()) : this.shown ? this.hide() : this }, ajaxToggleLoadClass: function (t) { this.ajax.loadingClass && this.$element.toggleClass(this.ajax.loadingClass, t) }, lookup: function (t) { var e; if (!this.ajax) return this.query = this.$element.val(), this.query && (e = this.grepper(this.source)) ? (0 == e.length && (e[0] = { id: -21, name: "Result not Found" }), this.render(e.slice(0, this.options.items)).show()) : this.shown ? this.hide() : this; this.ajaxer() }, matcher: function (t) { return ~t.toLowerCase().indexOf(this.query.toLowerCase()) }, sorter: function (t) { if (this.options.ajax) return t; for (var e, i = [], s = [], a = []; e = t.shift();)e.toLowerCase().indexOf(this.query.toLowerCase()) ? ~e.indexOf(this.query) ? s.push(e) : a.push(e) : i.push(e); return i.concat(s, a) }, highlighter: function (t) { var e = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"); return t.replace(new RegExp("(" + e + ")", "ig"), function (t, e) { return "<strong>" + e + "</strong>" }) }, render: function (e) { var i, s = this, a = "string" == typeof s.options.displayField; return e = t(e).map(function (e, o) { return "object" == typeof o ? (i = a ? o[s.options.displayField] : s.options.displayField(o), e = t(s.options.item).attr("data-value", o[s.options.valueField])) : (i = o, e = t(s.options.item).attr("data-value", o)), e.find("a").html(s.highlighter(i)), e[0] }), s.autoSelect && e.first().addClass("active"), this.$menu.html(e), this }, grepper: function (e) { var i, s, a = this, o = "string" == typeof a.options.displayField; if (!(o && e && e.length)) return null; if (e[0].hasOwnProperty(a.options.displayField)) i = t.grep(e, function (t) { return s = o ? t[a.options.displayField] : a.options.displayField(t), a.matcher(s) }); else { if ("string" != typeof e[0]) return null; i = t.grep(e, function (t) { return a.matcher(t) }) } return this.sorter(i) }, next: function (e) { var i = this.$menu.find(".active").removeClass("active").next(); if (i.length || (i = t(this.$menu.find("li")[0])), this.options.scrollBar) { var s = this.$menu.children("li").index(i); s % 8 == 0 && this.$menu.scrollTop(26 * s) } i.addClass("active") }, prev: function (t) { var e = this.$menu.find(".active").removeClass("active").prev(); if (e.length || (e = this.$menu.find("li").last()), this.options.scrollBar) { var i = this.$menu.children("li"), s = i.length - 1, a = i.index(e); (s - a) % 8 == 0 && this.$menu.scrollTop(26 * (a - 7)) } e.addClass("active") }, listen: function () { this.$element.on("focus", t.proxy(this.focus, this)).on("blur", t.proxy(this.blur, this)).on("keypress", t.proxy(this.keypress, this)).on("keyup", t.proxy(this.keyup, this)), this.eventSupported("keydown") && this.$element.on("keydown", t.proxy(this.keydown, this)), this.$menu.on("click", t.proxy(this.click, this)).on("mouseenter", "li", t.proxy(this.mouseenter, this)).on("mouseleave", "li", t.proxy(this.mouseleave, this)) }, move: function (t) { if (this.shown) { switch (t.keyCode) { case 9: case 13: case 27: t.preventDefault(); break; case 38: t.preventDefault(), this.prev(); break; case 40: t.preventDefault(), this.next() }t.stopPropagation() } }, keydown: function (e) { this.suppressKeyPressRepeat = ~t.inArray(e.keyCode, [40, 38, 9, 13, 27]), this.move(e) }, keypress: function (t) { this.suppressKeyPressRepeat || this.move(t) }, keyup: function (t) { switch (t.keyCode) { case 40: case 38: case 16: case 17: case 18: break; case 9: case 13: if (!this.shown) return; this.select(); break; case 27: if (!this.shown) return; this.hide(); break; default: this.ajax ? this.ajaxLookup() : this.lookup() }t.stopPropagation(), t.preventDefault() }, focus: function (t) { this.focused = !0 }, blur: function (t) { this.focused = !1, !this.mousedover && this.shown && this.hide() }, click: function (t) { t.stopPropagation(), t.preventDefault(), this.select(), this.$element.focus() }, mouseenter: function (e) { this.mousedover = !0, this.$menu.find(".active").removeClass("active"), t(e.currentTarget).addClass("active") }, mouseleave: function (t) { this.mousedover = !1, !this.focused && this.shown && this.hide() }, destroy: function () { this.$element.off("focus", t.proxy(this.focus, this)).off("blur", t.proxy(this.blur, this)).off("keypress", t.proxy(this.keypress, this)).off("keyup", t.proxy(this.keyup, this)), this.eventSupported("keydown") && this.$element.off("keydown", t.proxy(this.keydown, this)), this.$menu.off("click", t.proxy(this.click, this)).off("mouseenter", "li", t.proxy(this.mouseenter, this)).off("mouseleave", "li", t.proxy(this.mouseleave, this)), this.$element.removeData("typeahead") } }, t.fn.typeahead = function (i) { return this.each(function () { var s = t(this), a = s.data("typeahead"), o = "object" == typeof i && i; a || s.data("typeahead", a = new e(this, o)), "string" == typeof i && a[i]() }) }, t.fn.typeahead.defaults = { source: [], items: 10, scrollBar: !1, alignWidth: !0, menu: '<ul class="typeahead dropdown-menu"></ul>', item: '<li><a href="#"></a></li>', valueField: "id", displayField: "name", autoSelect: !0, onSelect: function () { }, ajax: { url: null, timeout: 300, method: "get", triggerLength: 1, loadingClass: null, preDispatch: null, preProcess: null } }, t.fn.typeahead.Constructor = e, t(function () { t("body").on("focus.typeahead.data-api", '[data-provide="typeahead"]', function (e) { var i = t(this); i.data("typeahead") || (e.preventDefault(), i.typeahead(i.data())) }) }) }(window.jQuery);