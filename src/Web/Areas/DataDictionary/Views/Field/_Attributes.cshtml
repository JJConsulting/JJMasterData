@using JJMasterData.Commons.Localization
@using JJMasterData.Core.Web
@using Microsoft.AspNetCore.Mvc.TagHelpers


@using JJMasterData.Commons.Localization
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<JJMasterDataResources> StringLocalizer

@model FormElementField

@if (Model.Component is FormComponent.Text 
    or FormComponent.Number 
    or FormComponent.Password
    or FormComponent.Email 
    or FormComponent.Cnpj 
    or FormComponent.Cpf 
    or FormComponent.CnpjCpf 
    or FormComponent.Cep)
{
    <div class="@BootstrapHelper.FormGroup col-sm-3">
        <label class="@BootstrapHelper.Label" for="txtPlaceHolder">@StringLocalizer["Placeholder"]</label>
        <input class="form-control" id="txtPlaceHolder" name="txtPlaceHolder" maxlength="100" type="text" value="@Model.GetAttr(FormElementField.PlaceholderAttribute)">
    </div>
}

@switch (Model.Component)
{
    case FormComponent.Slider or FormComponent.Number:
        <div class="col-sm-2">
            <label for="minValue" title="@StringLocalizer["Minimum Value"]" class="@BootstrapHelper.Label">@StringLocalizer["Minimum Value"]</label>
            <input class="form-control jjdecimal" type="number" name="minValue" id="minValue" value="@Model.GetAttr(FormElementField.MinValueAttribute)"/>
        </div>
        <div class="col-sm-2">
            <label for="maxValue" title="@StringLocalizer["Maximum Value"]" class="@BootstrapHelper.Label">@StringLocalizer["Maximum Value"]</label>
            <input class="form-control jjdecimal" type="number" name="maxValue" id="maxValue" value="@Model.GetAttr(FormElementField.MaxValueAttribute)"/>
        </div>
        <div class="col-sm-2">
            <label for="step" @BootstrapHelper.GetDataToggle("tooltip") 
                   title="@StringLocalizer["Defines the interval at which the value changes."]"
                   class="@BootstrapHelper.Label">@StringLocalizer["Step"]</label>
            <input id="step" name="step" class="form-control jjdecimal" type="number" value="@Model.GetAttr(FormElementField.StepAttribute)"/>
        </div>
        break;
    case FormComponent.TextArea:
        <div class="@BootstrapHelper.FormGroup col-sm-2">
            <label class="@BootstrapHelper.Label " for="txtTextAreaRows" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Number of lines in the text box"]">@StringLocalizer["Rows"]</label>
            <input class="form-control" id="txtTextAreaRows" name="txtTextAreaRows" maxlength="100" type="number" min="1" max="5000" placeholder="5" value="@Model.GetAttr(FormElementField.RowsAttribute)">
        </div>
        break;
    case FormComponent.Lookup:
        <div class="@BootstrapHelper.FormGroup col-sm-2">
            <label class="@BootstrapHelper.Label " for="cboLkPopUpSize" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Popup Size"]">@StringLocalizer["Popup Size"]</label>
            <select id="cboLkPopUpSize" name="cboLkPopUpSize" class="form-control form-select" asp-items="@Html.GetEnumSelectList<PopupSize>()"></select>
        </div>

        <div class="@BootstrapHelper.FormGroup col-sm-4">
            <label class="@BootstrapHelper.Label " for="txtLkPopUpTitle" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Title Pop Up"]">@StringLocalizer["Title Pop Up"]</label>
            <input class="form-control" id="txtLkPopUpTitle" name="txtLkPopUpTitle" maxlength="200" type="text" placeholder="@StringLocalizer["Search..."]" value="@Model.GetAttr(FormElementField.PopUpTitleAttribute)">
        </div>
        break;
    case FormComponent.Date:
    case FormComponent.DateTime:
    case FormComponent.Hour:
        bool @checked = Model.GetAttr(FormElementField.AutocompletePickerAttribute) == "1";
        <div class="@BootstrapHelper.FormGroup col-sm-4">
            <label
                class="@BootstrapHelper.Label "
                @BootstrapHelper.GetDataToggle("tooltip")
                title="@StringLocalizer["When opening the picker, fill the input with today's date."]"
                for="@FormElementField.AutocompletePickerAttribute">
                @StringLocalizer["Autocomplete"]
            </label>
            <br/>
            <input class="form-control"
                   data-toggle="toggle"
                   data-on="@StringLocalizer["Yes"]"
                   data-off="@StringLocalizer["No"]"
                   id="@FormElementField.AutocompletePickerAttribute"
                   name="@FormElementField.AutocompletePickerAttribute"
                   maxlength="200"
                   value="1"
                   @(@checked ? "checked" : string.Empty)
                   type="checkbox">
        </div>
        break;
}