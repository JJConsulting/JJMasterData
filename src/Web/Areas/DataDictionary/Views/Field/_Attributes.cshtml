@inject IStringLocalizer<MasterDataResources> StringLocalizer

@using JJMasterData.Core.DataDictionary.Models
@model JJMasterData.Core.DataDictionary.Models.FormElementField

@{
    var cultures = System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes.SpecificCultures);
}


@if (Model.Component is FormComponent.Text
     or FormComponent.Number
     or FormComponent.Password
     or FormComponent.Email
     or FormComponent.Cnpj
     or FormComponent.Cpf
     or FormComponent.CnpjCpf
     or FormComponent.Cep)
{
    <div class="@BootstrapHelper.FormGroup col-sm-3">
        <div class="form-floating">
            <input class="form-control" id="txtPlaceHolder" name="txtPlaceHolder" maxlength="100" type="text" value="@Model.GetAttr(FormElementField.PlaceholderAttribute)">
            <label for="txtPlaceHolder">@StringLocalizer["Placeholder"]</label>
        </div>
    </div>
}

@switch (Model.Component)
{
    case FormComponent.CheckBox:

        <div class="@BootstrapHelper.FormGroup col-sm-4">
            <checkbox
                name="@FormElementField.IsSwitchAttribute"
                switch="true"
                label="@StringLocalizer["Show as Switch"]"
                value="@(Model.GetAttr(FormElementField.IsSwitchAttribute) is true)"/>
        </div>
        break;
    case FormComponent.Currency:
        <div class="col-sm-4">
            <div class="form-floating">
                <select class="form-select" name="@FormElementField.CultureInfoAttribute" id="@FormElementField.CultureInfoAttribute">
                    <option value="">@StringLocalizer["--Select--"]</option>
                    @{
                        var selectedCulture = Model.GetAttr(FormElementField.CultureInfoAttribute);
                    }
                    @foreach (var culture in cultures)
                    {
                        var isSelected = selectedCulture?.ToString() == culture.Name;
                        <option selected="@isSelected"
                                value="@culture.Name">
                            @($"{culture.DisplayName} - {culture.NumberFormat.CurrencySymbol}")
                        </option>
                    }
                </select>
                <label for="@FormElementField.CultureInfoAttribute">@StringLocalizer["Culture"]</label>
            </div>
        </div>
        break;
    case FormComponent.Slider or FormComponent.Number:
        <div class="col-sm-4">
            <div class="form-floating">
                <input class="form-control jj-numeric" placeholder="" type="number" name="minValue" id="minValue" value="@Model.GetAttr(FormElementField.MinValueAttribute)"/>
                <label for="minValue">@StringLocalizer["Minimum Value"]</label>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-floating">
                <input class="form-control jj-numeric" placeholder="" type="number" name="maxValue" id="maxValue" value="@Model.GetAttr(FormElementField.MaxValueAttribute)"/>
                <label for="maxValue" class="@BootstrapHelper.Label">@StringLocalizer["Maximum Value"]</label>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-floating">
                <input id="step" name="step" placeholder="1" class="form-control jj-numeric" type="number" value="@Model.GetAttr(FormElementField.StepAttribute)"/>
                <label for="step" data-bs-toggle="tooltip"
                       title="@StringLocalizer["Defines the interval at which the value changes."]">
                    @StringLocalizer["Step"]
                </label>
            </div>
        </div>
        break;
    case FormComponent.TextArea:
        <div class="@BootstrapHelper.FormGroup col-sm-4">
            <div class="form-floating">
                <input class="form-control" id="txtTextAreaRows" name="txtTextAreaRows" maxlength="100" type="number" min="1" max="5000" placeholder="5" value="@Model.GetAttr(FormElementField.RowsAttribute)" data-bs-toggle="tooltip" title="@StringLocalizer["Number of lines in the text box."]">
                <label for="txtTextAreaRows">@StringLocalizer["Rows"]</label>
            </div>
        </div>
        break;
    case FormComponent.Lookup:
        <div class="@BootstrapHelper.FormGroup col-sm-4">
            <div class="form-floating">
                <select id="cboLkPopUpSize" name="cboLkPopUpSize" class="form-control form-select" asp-items="@Html.GetEnumSelectList<ModalSize>()"></select>
                <label for="cboLkPopUpSize">@StringLocalizer["Modal Size"]</label>
            </div>
        </div>

        <div class="@BootstrapHelper.FormGroup col-sm-4">
            <div class="form-floating">
                <input class="form-control" id="txtLkPopUpTitle" name="txtLkPopUpTitle" maxlength="200" type="text" placeholder="@StringLocalizer["Search..."]" value="@Model.GetAttr(FormElementField.PopUpTitleAttribute)">
                <label for="txtLkPopUpTitle">@StringLocalizer["Modal Title"]</label>
            </div>
        </div>
        break;
    case FormComponent.Date:
    case FormComponent.DateTime:
    case FormComponent.Hour:
        <div class="@BootstrapHelper.FormGroup col-sm-4">
            <checkbox tooltip="@StringLocalizer["When opening the picker, fill the input with today's date."]" label="@StringLocalizer["Autocomplete"]" name="@(FormElementField.AutocompletePickerAttribute)"
                      switch="true"

                      value="@(Model.GetAttr(FormElementField.AutocompletePickerAttribute) is true)"/>
        </div>
        break;
}