@using JJMasterData.Core.Web
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject IStringLocalizer<JJMasterDataResources> StringLocalizer

@model FormElementField

@functions
{
    void ElementMap()
    {
        <div class="row">
            <div class="@BootstrapHelper.FormGroup col-sm-4 required">
                <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Field"]">@StringLocalizer["Field Key"]</label>
                @Html.DropDownListFor(modelItem => modelItem.DataItem!.ElementMap.FieldKey,
                    new SelectList(ViewBag.ElementFieldList, "Key", "Value"),
                    new { @class = "form-control form-select" })
            </div>
            <div class="@BootstrapHelper.FormGroup col-sm-4">
                <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Key"]">@StringLocalizer["Field Description"]</label>
                @Html.DropDownListFor(modelItem => modelItem.DataItem!.ElementMap.FieldDescription,
                    new SelectList(ViewBag.ElementFieldList, "Key", "Value"),
                    new { @class = "form-control form-select" })
            </div>
        </div>
    }

    void Filters()
    {
        <div class="row">
            <div class="@BootstrapHelper.FormGroup col-sm-4">
                <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Field"]">@StringLocalizer["Field Lookup"]</label>
                @Html.DropDownList("mapField",
                    new SelectList(ViewBag.ElementFieldList, "Key", "Value"),
                    new { @class = "form-control" })
            </div>
            <div class="@BootstrapHelper.FormGroup col-sm-5">
                <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Field"]">@StringLocalizer["Filter Expression"]</label>
                <div class="input-group">
                    <input type="text" class="form-control" id="mapExpressionValue" name="mapExpressionValue"/>
                    <span class="input-group-btn" style="padding-left: 10px;">
                        <button class="@BootstrapHelper.DefaultButton btn-small" onclick="addElementMapFilter();">
                            <span class="fa fa-plus-square-o"></span>&nbsp;@StringLocalizer["Add"]
                        </button>
                    </span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">

                <table class="table table-bordered table-hover">
                    <tbody>
                    @for (int i = 0; i < Model.DataItem!.ElementMap.MapFilters.Count; i++)
                    {
                        DataElementMapFilter mapFilter = Model.DataItem.ElementMap.MapFilters[i];
                        <tr>
                            <td>
                                @mapFilter.FieldName <span>=</span>@mapFilter.ExpressionValue
                                @Html.HiddenFor(x => x.DataItem!.ElementMap.MapFilters[i].FieldName, mapFilter.FieldName)
                                @Html.HiddenFor(x => x.DataItem!.ElementMap.MapFilters[i].ExpressionValue, mapFilter.ExpressionValue)
                            </td>
                            <td style="width:80px;" align="center">
                                <a href="#" @BootstrapHelper.GetDataToggle("tooltip") title="Delete" onclick="removeElementMapFilter('@mapFilter.FieldName');">
                                    <span class="fa fa-trash"></span>
                                </a>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>

            </div>
        </div>
    }
}

<script lang="javascript" type="text/javascript">

    function addElementMapFilter() {
        SpinnerOverlay.show();
        var url = "@Url.Action("AddElementMapFilter", new { dictionaryName = ViewBag.DictionaryName })";
        $("form:first").attr("action", url).submit();
    }

    function removeElementMapFilter(elementMapFieldName) {
        SpinnerOverlay.show();
        $("<input>").attr({
            type: "hidden",
            id: "elementMapFieldName",
            name: "elementMapFieldName",
            value: elementMapFieldName
        }).appendTo("form");
        var url = "@Url.Action("RemoveElementMapFilter", new { dictionaryName = ViewBag.DictionaryName })";
        $("form:first").attr("action", url).submit();
    }

</script>


<div class="row">
    <div class="col-sm-12">
        <h4>DataItem</h4>
        <hr/>
    </div>

    <div class="@BootstrapHelper.FormGroup col-sm-3 required">
        <label class="@BootstrapHelper.Label" for="DataItem_DataItemType" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["ListType"]">@StringLocalizer["ListType"]</label>
        <select id="DataItem_DataItemType" name="DataItem.DataItemType" onchange="this.form.submit();" class="form-control form-select">
            <option selected="selected" value="@((int)DataItemType.Dictionary)">@DataItemType.Dictionary.ToString()</option>
        </select>
    </div>

    <div class="@BootstrapHelper.FormGroup col-sm-3 required" id="divReplaceTextOnGrid">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Replace the field value with a description of the combination when displaying a grid"]">@StringLocalizer["ReplaceTextOnGrid"]</label>
        @Html.DropDownListFor(modelItem => modelItem.DataItem!.ReplaceTextOnGrid, new[]
        {
            new SelectListItem { Text = StringLocalizer["Yes"], Value = "true" },
            new SelectListItem { Text = StringLocalizer["No"], Value = "false" }
        },
            new { @class = "form-control form-select" })
    </div>

    <div class="@BootstrapHelper.FormGroup col-sm-3 required">
        <label class="@BootstrapHelper.Label " @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Dictionary Name"]">@StringLocalizer["ElementName"]</label>
        @Html.DropDownListFor(modelItem => modelItem.DataItem!.ElementMap.ElementName,
            new SelectList(ViewBag.ElementNameList, "Key", "Value"),
            new { @class = "form-control form-select", onchange = "this.form.submit();" })
    </div>

    <div class="@BootstrapHelper.FormGroup col-sm-2 required">
        <label class="@BootstrapHelper.Label " @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Enable / Disable dictionary actions"]">@StringLocalizer["EnableElementActions"]</label>
        @Html.DropDownListFor(modelItem => modelItem.DataItem!.ElementMap.EnableElementActions, new[]
        {
            new SelectListItem { Text = StringLocalizer["No"], Value = "false" },
            new SelectListItem { Text = StringLocalizer["Yes"], Value = "true" }
        },
            new { @class = "form-control form-select" })
    </div>

    @if (BootstrapHelper.Version == 5)
    {
        <div class="accordion pb-1" id="gridAccordion">
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingOne">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        @StringLocalizer["Element Map"]
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse show" aria-labelledby="headingOne" data-bs-parent="#gridAccordion">
                    <div class="accordion-body">
                        <div class="container-fluid">
                            <div class="row">
                                @{ ElementMap();}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="accordion pb-1" id="formAccordion">
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingOne">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo">
                        @StringLocalizer["Filters"]
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse" aria-labelledby="headingOne" data-bs-parent="#formAccordion">
                    <div class="accordion-body">
                        <div class="container-fluid">
                            <div class="row">
                                @{ Filters(); }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
         <div class="@BootstrapHelper.PanelGroup"> 
             <div id="pnl_formelemnt" class="@BootstrapHelper.GetPanel("default")"> 
                 <div class="@BootstrapHelper.GetPanelHeading("default")" href="#collapseElementMap"  
                      @BootstrapHelper.GetDataToggle("collapse") data-target="#collapseElementMap" aria-expanded="true"> 
                     <h5 class="@BootstrapHelper.PanelTitle">@StringLocalizer["Filters"]</h5> 
                 </div> 
                 <div id="collapseElementMap" class="@BootstrapHelper.PanelCollapse"> 
                     <div class="@BootstrapHelper.PanelBody"> 
                         <div class="container-fluid"> 
                             <div class="row"> 
                                 @{ ElementMap(); } 
                             </div> 
                         </div> 
                     </div> 
                 </div> 
             </div> 
         </div> 

        <div class="@BootstrapHelper.PanelGroup">
            <div id="pnl_formview" class="@BootstrapHelper.GetPanel("default")">
                <div class="@BootstrapHelper.GetPanelHeading("default")" href="#collapseFormView" 
                     @BootstrapHelper.GetDataToggle("collapse") data-target="#collapseFormView" aria-expanded="true">
                    <h5 class="@BootstrapHelper.PanelTitle">@StringLocalizer["Filters"]</h5>
                </div>
                <div id="collapseFormView" class="@BootstrapHelper.PanelCollapse">
                    <div class="@BootstrapHelper.PanelBody">
                        <div class="container-fluid">
                            <div class="row">
                                @{ Filters(); }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

</div>