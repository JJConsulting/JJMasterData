@using JJMasterData.Core.DataDictionary.Models
@model JJMasterData.Core.DataDictionary.Models.FormElementField
@inject IStringLocalizer<MasterDataResources> StringLocalizer

<collapse-panel title="@StringLocalizer["Element Map"]" expanded-by-default="true" icon="Map">
    <div class="row">
        <div class="@BootstrapHelper.FormGroup col-sm-12 required">
            <div class="form-floating">
                <select asp-for="DataItem!.ElementMap!.ElementName"
                        asp-items="@(new SelectList(ViewBag.ElementNameList, "Key", "Value"))"
                        class="form-control form-select"
                        onchange="getMasterDataForm().submit();"></select>
                <label>@StringLocalizer["Element Name"]</label>
            </div>
         

        </div>
        <div class="@BootstrapHelper.FormGroup col-sm-3 required">
            <div class="form-floating">
                <select asp-for="DataItem!.ElementMap!.IdFieldName"
                        asp-items="@(new SelectList(ViewBag.ElementFieldList, "Key", "Value"))"
                        class="form-control form-select"></select>
                <label>@StringLocalizer["Id"]</label>
            </div>
        </div>
        <div class="@BootstrapHelper.FormGroup col-sm-3">
            <div class="form-floating">
                <select asp-for="DataItem!.ElementMap!.DescriptionFieldName"
                        asp-items="@(new SelectList(ViewBag.ElementFieldList, "Key", "Value"))"
                        class="form-control form-select"></select>
                <label>@StringLocalizer["Description"]</label>
            </div>
        </div>

        @if (Model.Component is FormComponent.ComboBox or FormComponent.Search or FormComponent.RadioButtonGroup && Model.DataItem!.ShowIcon)
        {
            <div class="@BootstrapHelper.FormGroup col-sm-2">
                <div class="form-floating">
                    <select asp-for="DataItem!.ElementMap!.IconIdFieldName"
                            asp-items="@(new SelectList(ViewBag.ElementFieldList, "Key", "Value"))"
                            class="form-control form-select"></select>
                    <label>@StringLocalizer["Icon"]</label>
                </div>

            </div>
            <div class="@BootstrapHelper.FormGroup col-sm-2">
                <div class="form-floating">
                    <select asp-for="DataItem!.ElementMap!.IconColorFieldName"
                            asp-items="@(new SelectList(ViewBag.ElementFieldList, "Key", "Value"))"
                            class="form-control form-select"></select>
                    <label>@StringLocalizer["Icon Color"]</label>
                </div>
            </div>
        }
        @if (Model.Component is FormComponent.ComboBox)
        {
            <div class="@BootstrapHelper.FormGroup col-sm-2">
                <div class="form-floating">
                    <select asp-for="DataItem!.ElementMap!.GroupFieldName"
                            asp-items="@(new SelectList(ViewBag.ElementFieldList, "Key", "Value"))"
                            class="form-control form-select"></select>
                    <label>@StringLocalizer["Group"]</label>
                </div>
            </div>
        }
    </div>
</collapse-panel>


<partial name="_DataItemElementMapFilter" model="null"/>
<div class="row">
    <div class="col-sm-12">
       
        <table class="table table-bordered table-hover">
            <tbody>
            @for (var i = 0; i < Model.DataItem!.ElementMap!.MapFilters.Count; i++)
            {
                var index = i;
                var mapFilter = Model.DataItem.ElementMap.MapFilters[i];
                <tr>
                    <td>
                        @mapFilter.FieldName<i class="fa-solid fa-arrow-right"></i>@mapFilter.ExpressionValue
                        @Html.HiddenFor(x => x.DataItem!.ElementMap!.MapFilters[index].FieldName, mapFilter.FieldName)
                        <div style="display:none">
                            <expression for="@Model.DataItem!.ElementMap!.MapFilters[index].ExpressionValue" value="mapFilter.ExpressionValue"/>
                        </div>
                    </td>
                    <td style="width:80px;" align="center">
                        <a href="#" @BootstrapHelper.GetDataToggle("tooltip") title="Delete" onclick="removeElementMapFilter('@mapFilter.FieldName');">
                            <span class="fa fa-trash"></span>
                        </a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
       
    </div>
</div>

