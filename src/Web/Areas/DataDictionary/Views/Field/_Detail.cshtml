@using JJMasterData.Commons.Data.Entity
@using JJMasterData.Core.Web
@using JJMasterData.Web.Areas.DataDictionary.Models.ViewModels
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model FormElementField
@inject IStringLocalizer<JJMasterDataResources> StringLocalizer

@{
    string currentTab = ViewBag.Tab;

    string IsActive(string tab)
    {
        if (currentTab == tab)
        {
            return "active";
        }
        return string.Empty;
    }
}

<script lang="javascript" type="text/javascript">
    function save() {
        messageWait.show();
        const url = "@Url.Action("Save", new { dictionaryName = ViewBag.DictionaryName })";
        $("form:first").attr("action", url).submit();
    }

    function copy() {
        messageWait.show();
        const url = "@Url.Action("Copy", new { dictionaryName = ViewBag.DictionaryName })";
        $("form:first").attr("action", url).submit();
    }

    function showSuccess(fieldName) {
        $(document).ready(function () {
            $("#divSuccess").css("display", "");
            window.parent.$('#current_field').val(fieldName);
            window.parent.cmdRefresh();
        });
    }
</script>

@Html.HiddenFor(model => Model.PanelId)
<div class="container-fluid jjcontainer">

    <ul class="nav nav-tabs">
        <li class="nav-item" id="navGeneral" @IsActive("navGeneral")>
            <a class="nav-link" @BootstrapHelper.GetDataToggle("tab") href="#divGeneral">@StringLocalizer["General"]</a>
        </li>
        <li class="nav-item" id="navComponent" @IsActive("navComponent")>
            <a class="nav-link" @BootstrapHelper.GetDataToggle("tab") href="#divComponent">@StringLocalizer["Component"]</a>
        </li>
        <li class="nav-item" id="navAdvanced"  @IsActive("navAdvanced")>
            <a class="nav-link" @BootstrapHelper.GetDataToggle("tab") href="#divAdvanced">@StringLocalizer["Advanced"]</a>
        </li>
    </ul>

    <div class="tab-content" style="margin-top: 20px;">
        <div id="divGeneral" class="tab-pane fade">
            <div class="row">
                <div class="@BootstrapHelper.FormGroup col-sm-4 required">
                    <label class="@BootstrapHelper.Label " for="Name" @BootstrapHelper.GetDataToggle("tooltip") data-placement="right" title="@StringLocalizer["FieldName"]">@StringLocalizer["FieldName"]</label>
                    @Html.TextBoxFor(model => Model.Name, new { maxlength = "64", @class = "form-control" })
                    <input type="hidden" id="originalName" name="originalName" value="@ViewBag.OriginalName"/>
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-4">
                    <label class="@BootstrapHelper.Label " for="Label" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Description on the form"]">@StringLocalizer["Label"]</label>
                    @Html.TextBoxFor(model => model.Label, new { @class = "form-control" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-4">
                    <label class="@BootstrapHelper.Label " for="DefaultValue" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Expression for a default value"]">@StringLocalizer["DefaultValue"]</label>
                    @Html.TextBoxFor(model => model.DefaultValue, new { @class = "form-control" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-2 required">
                    <label class="@BootstrapHelper.Label " for="Filter_Type" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Filter Type"]">@StringLocalizer["Filter"]</label>
                    <select asp-for="Filter.Type" class="form-control form-select" asp-items="Html.GetEnumSelectList<FilterMode>()"></select>
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-2 required">
                    <label class="@BootstrapHelper.Label " for="DataBehavior" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Field behavior in relation to the database"]">@StringLocalizer["DataBehavior"]</label>
                    <select asp-for="DataBehavior" class="form-control form-select" asp-items="Html.GetEnumSelectList<FieldBehavior>()"></select>
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-2 required">
                    <label class="@BootstrapHelper.Label " for="DataType" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Data Type"]">@StringLocalizer["Data Type"]</label>
                    <select asp-for="DataType" class="form-control form-select" asp-items="Html.GetEnumSelectList<FieldType>()"></select>
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-2">
                    <label class="@BootstrapHelper.Label " for="Size" @BootstrapHelper.GetDataToggle("tooltip") title="Tamanho do campo">@StringLocalizer["Size"]</label>
                    @Html.TextBoxFor(model => model.Size, new { @class = "form-control" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-1 required">
                    <label class="@BootstrapHelper.Label " for="IsRequired" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Required field"]">@StringLocalizer["Required"]</label>
                    <div class="input-append">
                        @Html.CheckBoxFor(model => model.IsRequired, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
                    </div>
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-1 required">
                    <label class="@BootstrapHelper.Label " for="IsPk" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Chave primária"]">@StringLocalizer["PK"]</label>
                    <div class="input-append">
                        @Html.CheckBoxFor(model => model.IsPk, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
                    </div>
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-1 required">
                    <label class="@BootstrapHelper.Label " for="AutoNum" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Automatic numeric (auto increment)"]">@StringLocalizer["Identity"]</label>
                    <div class="input-append">
                        @Html.CheckBoxFor(model => model.AutoNum, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
                    </div>
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-12">
                    <label class="@BootstrapHelper.Label " for="HelpDescription">
                        @StringLocalizer["Help Description"]
                        <span class="fa fa-question-circle help-description" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["The help text will be displayed like this on the form."]"></span>
                    </label>
                    @Html.TextBoxFor(model => model.HelpDescription, new { @class = "form-control" })
                </div>
            </div>

        </div>

        <div id="divComponent" class="tab-pane fade">
            <div class="row">

                <div class="@BootstrapHelper.FormGroup col-sm-4 required">
                    <label class="@BootstrapHelper.Label " for="Component" @BootstrapHelper.GetDataToggle("tooltip") data-placement="right" title="@StringLocalizer["Component Type"]">@StringLocalizer["Component"]</label>
                    <select asp-for="Component" class="form-control form-select" onchange="this.form.submit();" asp-items="Html.GetEnumSelectList<FormComponent>()"></select>
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-2 required">
                    <label class="@BootstrapHelper.Label " for="AutoPostBack" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["When changing the content, it reloads all form fields"]">@StringLocalizer["AutoPostBack"]</label>
                    @Html.DropDownListFor(modelItem => modelItem.AutoPostBack, new[]
                    {
                        new SelectListItem { Text = StringLocalizer["No"], Value = "false" },
                        new SelectListItem { Text = StringLocalizer["Yes"], Value = "true" }
                    },
                        new { @class = "form-control form-select" })
                </div>

                @if (Model.Component is FormComponent.Number or FormComponent.Currency or FormComponent.Slider)
                {
                    <div class="@BootstrapHelper.FormGroup col-sm-2">
                        <label class="@BootstrapHelper.Label " for="NumberOfDecimalPlaces" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Number of decimal places"]">@StringLocalizer["DecimalPlaces"]</label>
                        @Html.TextBoxFor(model => model.NumberOfDecimalPlaces, new { type = "number", @class = "form-control" })
                    </div>
                }

                @await Html.PartialAsync("_Attributes", Model)

            </div>

            @if (Model.Component == FormComponent.Text |
                 Model.Component == FormComponent.Email |
                 Model.Component == FormComponent.Number |
                 Model.Component == FormComponent.Cep |
                 Model.Component == FormComponent.Cnpj |
                 Model.Component == FormComponent.Cpf |
                 Model.Component == FormComponent.CnpjCpf)
            {
                if (ViewBag.OriginalName == null || ViewBag.OriginalName == "")
                {
                    <hr/>
                    <div class="col-sm-12">
                        <span class="text-info fa fa-info-circle"></span>
                        <span class="small">
                            <b>@StringLocalizer["Actions"]</b>
                            <br/>
                            <em>@StringLocalizer["This component allows you to add actions, but you must save it to add actions later."]</em>
                        </span>
                    </div>
                }
                else
                {
                    @await Html.PartialAsync("~/Areas/DataDictionary/Views/Actions/_List.cshtml", new ActionsListDetailsViewModel
                    {
                        Context = ActionSource.Field,
                        DictionaryName = ViewBag.DictionaryName,
                        Actions = Model.Actions.GetAllSorted(),
                        FieldName = ViewBag.OriginalName
                    })
                }
            }
            else if (Model.Component == FormComponent.ComboBox |
                     Model.Component == FormComponent.Search)
            {
                @await Html.PartialAsync("_DataItem", Model)
            }
            else if (Model.Component == FormComponent.Lookup)
            {
                @await Html.PartialAsync("_Lookup", Model)
            }
            else if (Model.Component == FormComponent.File)
            {
                @await Html.PartialAsync("_DataFile", Model)
            }

        </div>

        <div id="divAdvanced" class="tab-pane fade">
            <div class="row">
                <div class="@BootstrapHelper.FormGroup col-sm-12 required">
                    <label class="@BootstrapHelper.Label " for="VisibleExpression" @BootstrapHelper.GetDataToggle("tooltip") data-placement="right" title="@StringLocalizer["Expression that returns a Boolean at runtime"]">@StringLocalizer["Visible Expression"]</label>
                    @Html.TextBoxFor(model => model.VisibleExpression, new { @class = "form-control" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-12 required">
                    <label class="@BootstrapHelper.Label " for="EnableExpression" @BootstrapHelper.GetDataToggle("tooltip") data-placement="right" title="@StringLocalizer["Expression that returns a Boolean at runtime"]">@StringLocalizer["Enable Expression"]</label>
                    @Html.TextBoxFor(model => model.EnableExpression, new { @class = "form-control" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-12">
                    <label class="@BootstrapHelper.Label " for="TriggerExpression" @BootstrapHelper.GetDataToggle("tooltip") data-placement="right" title="@StringLocalizer["Redoes the expression whenever a field triggers in Auto Post Back"]">@StringLocalizer["Trigger Expression"]</label>
                    @Html.TextBoxFor(model => model.TriggerExpression, new { @class = "form-control" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-4">
                    <label class="@BootstrapHelper.Label " for="CssClass" @BootstrapHelper.GetDataToggle("tooltip") data-placement="right" title="@StringLocalizer["Class name (CSS) one to be assigned to object group rendering"]">@StringLocalizer["CssClass"]</label>
                    @Html.TextBoxFor(model => model.CssClass, new { @class = "form-control" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-2">
                    <label class="@BootstrapHelper.Label " for="LineGroup" @BootstrapHelper.GetDataToggle("tooltip") data-placement="right" title="@StringLocalizer["Row counter, used to break the line in the form (row class)"]">@StringLocalizer["Group Line"]</label>
                    @Html.TextBoxFor(model => model.LineGroup, new { type = "number", @class = "form-control" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-2 required">
                    <label class="@BootstrapHelper.Label " for="Export" @BootstrapHelper.GetDataToggle("tooltip") data-placement="right" title="@StringLocalizer["Allows you to export the field"]">@StringLocalizer["Export"]</label>
                    @Html.DropDownListFor(modelItem => modelItem.Export, new[]
                    {
                        new SelectListItem { Text = StringLocalizer["Yes"], Value = "true" },
                        new SelectListItem { Text = StringLocalizer["No"], Value = "false" }
                    },
                        new { @class = "form-control form-select" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-2 required">
                    <label class="@BootstrapHelper.Label " for="ValidateRequest" @BootstrapHelper.GetDataToggle("tooltip") data-placement="right" title="@StringLocalizer["Validates possibly dangerous values ​​on request"]">@StringLocalizer["Validate Request"]</label>
                    @Html.DropDownListFor(modelItem => modelItem.ValidateRequest, new[]
                    {
                        new SelectListItem { Text = StringLocalizer["Yes"], Value = "true" },
                        new SelectListItem { Text = StringLocalizer["No"], Value = "false" }
                    },
                        new { @class = "form-control form-select" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            @Html.Raw(ViewBag.Error)
        </div>

        <div class="col-sm-12">
            <div id="divSuccess" class="alert alert-success alert-dismissible" role="alert" style="display:none">
                <button type="button" class="@BootstrapHelper.Close" @BootstrapHelper.GetDataDismiss("alert") aria-label="Close">
                    <span aria-hidden="true">@BootstrapHelper.CloseButtonTimes</span>
                </button>
                <strong>@StringLocalizer["Success!"]</strong> @StringLocalizer["Record saved successfully."]
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12 jjtoolbar">
            @{
                Save();
            }
            @{
                Refresh();
            }
            @{
                Delete();
            }
            @{
                Copy();
            }
        </div>
    </div>

</div>

@functions{

    void Save()
    {
        <button type="button" class="btn btn-primary btn-small" style="color:white" onclick="save();">
            <span class="fa fa-check"></span>
            <span>&nbsp;@StringLocalizer["Save"]</span>
        </button>
    }

    void Refresh()
    {
        <a class="@BootstrapHelper.DefaultButton btn-small" href="@Url.Action("Index", new { dictionaryName = ViewBag.DictionaryName, fieldName = Model.Name })">
            <span class="fa fa-refresh fa-fw fa-fw"></span>
            <span>@StringLocalizer["Refresh"]</span>
        </a>
    }

    void Delete()
    {
        <a class="@BootstrapHelper.DefaultButton btn-small" href="@Url.Action("Delete", new { dictionaryName = ViewBag.DictionaryName, fieldName = Model.Name })">
            <span class="fa fa-trash"></span>
            <span>&nbsp;@StringLocalizer["Delete"]</span>
        </a>
    }

    void Copy()
    {
        <button type="button" class="@BootstrapHelper.DefaultButton btn-small" onclick="copy();">
            <span class="fa fa-files-o fa-fw fa-fw"></span>
            <span>&nbsp;@StringLocalizer["Copy"]</span>
        </button>
    }

}