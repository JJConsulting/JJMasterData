@using JJMasterData.Web.Areas.DataDictionary.Models.ViewModels
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using JJMasterData.Commons.Data.Entity
@using JJMasterData.Core.Web
@using JJMasterData.Core.Web.Components
@using JJMasterData.Core.Web.Http.Abstractions
@model List<JJMasterData.Commons.Data.Entity.ElementIndex>
@inject IStringLocalizer<JJMasterDataResources> StringLocalizer

@inject IHttpContext HttpContext
@{
    ViewData["Title"] = $"{ViewBag.DictionaryName} - {StringLocalizer["Indexes"]}";
}

@section Scripts
{
    <script lang="javascript" type="text/javascript">
        function deleteIndex(url) {
            if (confirm('Are you sure you want to delete this index?')) {
                $.post(url)
            }
        }
        
        document.addEventListener("DOMContentLoaded", function() {
            document.getElementById("filter").addEventListener('keyup', function() {
                let input, filter, table, tr, td, i, txtValue;
                input = document.getElementById("filter");
                filter = input.value.toUpperCase();
                table = document.getElementById("indexesTable");
                tr = table.getElementsByTagName("tr");
                for (i = 0; i < tr.length; i++) {
                    td = tr[i].getElementsByTagName("td")[0];
                    if (td) {
                        txtValue = td.textContent || td.innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                        } else {
                            tr[i].style.display = "none";
                        }
                    }
                }
            })
        });
    </script>
}


<partial name="_Menu" model="@(new DataDictionaryViewModel(ViewBag.DictionaryName, ViewBag.MenuId))"/>
@{
    var filterTextBox = new JJTextGroup(HttpContext)
    {
       Name = "txtFilter",
       PlaceHolder = StringLocalizer["Search..."]
    };

    filterTextBox.Actions.Add(new JJLinkButton
    {
        OnClientClick = null,
        IconClass = "fa fa-search"
    });
}

@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-sm-8">
            <button type="button" class="@BootstrapHelper.DefaultButton btn-small" onclick="popup.show('ElementIndex', '@Url.Action("Detail", "Indexes", new { dictionaryName = ViewBag.DictionaryName })');">
                <span class="fa fa-plus-circle"></span>
                <span>&nbsp;@StringLocalizer["New Index"]</span>
            </button>
        </div>
        <div class="col-sm-4">
            @Html.Raw(filterTextBox.GetHtml())
        </div>
    </div>
    <br/>

    <table id="indexesTable" class="table table-striped table-bordered table-hover">
        <thead>
        <tr>
            <th scope="col">@StringLocalizer["Columns"]</th>
            <th scope="col">@StringLocalizer["IsUnique"]</th>
            <th scope="col">@StringLocalizer["IsClustered"]</th>
            <th scope="col">&nbsp;</th>
        </tr>
        </thead>
        <tbody>
        @if (Model.Count > 0)
        {
            int index = 0;
            foreach (ElementIndex item in Model)
            {
                <tr>
                    <td>
                        @for (int i = 0; i < item.Columns.Count; i++)
                        {
                            @Html.HiddenFor(model => model[index].Columns[i])
                            @Html.HiddenFor(model => model[index].Columns[i])

                            if (i > 0)
                            {
                                <text>,@(item.Columns[i])</text>
                            }
                            else
                            {
                                <text>@(item.Columns[i])</text>
                            }
                        }
                    </td>
                    <td>
                        @item.IsUnique
                        @Html.HiddenFor(model => model[index].IsUnique)
                    </td>
                    <td>
                        @item.IsClustered
                        @Html.HiddenFor(model => model[index].IsClustered)
                    </td>
                    <td align="center" valign="middle" width="180px">
                        <button type="submit" @BootstrapHelper.GetDataToggle("tooltip") title="" class="btn btn-link" formaction="@Url.Action("MoveUp", "Indexes", new { dictionaryName = ViewBag.DictionaryName, index })" data-original-title="@StringLocalizer["Move Up"]">
                            <span class="fa fa-arrow-up"></span>
                        </button>
                        <button type="submit" @BootstrapHelper.GetDataToggle("tooltip") title="" class="btn btn-link" formaction="@Url.Action("MoveDown", "Indexes", new { dictionaryName = ViewBag.DictionaryName, index })" data-original-title="@StringLocalizer["Move Down"]">
                            <span class="fa fa-arrow-down"></span>
                        </button>
                        <button type="button" @BootstrapHelper.GetDataToggle("tooltip") title="" class="btn btn-link" onclick="popup.show('ElementIndex', '@Url.Action("Detail", "Indexes", new { dictionaryName = ViewBag.DictionaryName, index })');" data-original-title="@StringLocalizer["Edit"]">
                            <span class="fa fa-pencil"></span>
                        </button>
                        <button type="submit" @BootstrapHelper.GetDataToggle("tooltip") title="" class="btn btn-link" onclick="deleteIndex('@Url.Action("Delete", "Indexes", new { dictionaryName = ViewBag.DictionaryName, index })')" data-original-title="@StringLocalizer["Delete"]">
                            <span class="fa fa-trash"></span>
                        </button>
                    </td>
                </tr>
                index++;
            }
        }
        else
        {
            <tr>
                <td colspan="4">
                    @StringLocalizer["No data records found"]
                </td>
            </tr>
        }
        </tbody>
    </table>
    <br/>
    <br/>
}