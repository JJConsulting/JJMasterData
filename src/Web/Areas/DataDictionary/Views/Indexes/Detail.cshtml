@inject IStringLocalizer<MasterDataResources> StringLocalizer
@inject IOptionsSnapshot<MasterDataWebOptions> Options
@using JJMasterData.Web.TagHelpers
@model JJMasterData.Commons.Data.Entity.Models.ElementIndex

@{
    Layout = Options.Value.ModalLayoutPath;
}

<script type="text/javascript">
    function saveIndexes() {
        const requestOptions = getRequestOptions();
        fetch('@Url.Action("Detail", "Indexes", new { elementName = ViewBag.ElementName })', requestOptions)
        .then(response=>response.json()).then(data=>{
            if (data.success){
                 window.parent.defaultModal.hide();
                 window.parent.location.reload();
            }
            else{
                document.getElementById("divError").innerHTML = data.errorMessage;
            }
        })
    }
</script>

@using (Html.BeginMasterDataForm())
{
    @Html.Hidden("index", ViewData["Index"])
    <div class="well">
        <div>
            <div class="row">
                <div class="@BootstrapHelper.FormGroup col-sm-8">
                    <label class="@BootstrapHelper.Label" for="indexName">@StringLocalizer["IndexName"]</label>
                    @Html.TextBox("indexName", (string)ViewBag.IndexName, new { @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-2 required">
                     <checkbox for="IsUnique" layout="Switch"/>
                </div>
                <div class="@BootstrapHelper.FormGroup col-sm-2 required">
                    <checkbox for="IsClustered" layout="Switch"/>
                </div>

                <div class="col-sm-12">
                    <h4>@StringLocalizer["Fields"]</h4>
                    <hr/>
                </div>

                <div class="col-sm-12">
                    @{
                        List<SelectListItem> checkBoxList = ViewBag.CheckBoxList;
                        for (var i = 0; i < checkBoxList.Count; i++)
                        {
                            <div class="form-check">
                                @Html.HiddenFor(c => checkBoxList[i].Value)
                                @Html.HiddenFor(c => checkBoxList[i].Text)
                                @Html.CheckBoxFor(c => checkBoxList[i].Selected, new {@class="form-check-input"})
                                @Html.LabelFor(c => checkBoxList[i].Selected, checkBoxList[i].Text, new {@class="form-check-label"})
                            </div>
                            <br>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div id="divError" class="col-sm-12">
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <link-button text="Save" 
                         color="Primary" 
                         icon="Check" 
                         on-client-click="saveIndexes()"/>

            <link-button text="Cancel"
                         icon="SolidXmark"
                         on-client-click="window.parent.defaultModal.hide();"/>
        </div>
    </div>

    <br/>
    <br/>
}