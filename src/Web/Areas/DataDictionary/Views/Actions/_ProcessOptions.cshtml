@inject IStringLocalizer<MasterDataResources> StringLocalizer

@using JJMasterData.Core.DataDictionary.Models
@using JJMasterData.Web.TagHelpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model JJMasterData.Core.DataDictionary.Models.ProcessOptions


<script lang="javascript" type="text/javascript">
    document.addEventListener("DOMContentLoaded",()=>{
        listenTabs();

        $("#cboSqlEvent").change(function () {
            const selectedVal = $("#cboSqlEvent").selectpicker('val');
            if (selectedVal == "1") {
                $("#divCommandBefore").css("display", "");
                $("#divCommandAfter").css("display", "none");
            } else {
                $("#divCommandBefore").css("display", "none");
                $("#divCommandAfter").css("display", "");
            }
        });
    });

    function setupCodeMirror(){
        CodeMirrorWrapper.setupCodeMirror('ProcessOptions_CommandBeforeProcess',{mode: "text/x-sql", hintList: @Html.Raw(ViewBag.CodeMirrorHintList), hintKey: '{'});
        CodeMirrorWrapper.setupCodeMirror('ProcessOptions_CommandAfterProcess',{mode: "text/x-sql", hintList: @Html.Raw(ViewBag.CodeMirrorHintList), hintKey: '{'}); 
    }
    
    function listenTabs (){
        setupCodeMirror();

        const tabs = document.querySelectorAll('a[data-bs-toggle="tab"]')

        if(!tabs)
            return;

        tabs.forEach((tab)=>{
            tab.addEventListener('shown.bs.tab', () => {
                const codeMirrorElements = document.querySelectorAll(".CodeMirror");
                if (codeMirrorElements){
                    codeMirrorElements.forEach(function (c){
                        c.CodeMirror.refresh();
                    })
                }
                else{
                    setupCodeMirror();
                }
            })
        })
    }
</script>


<div class="row" style="margin-bottom:5px">

    <div class="col-sm-12">
        <label class="@BootstrapHelper.Label">@StringLocalizer["Sql Command"]</label>
    </div>
    <div class="col-sm-4">
        <select class="form-control form-select selectpicker" id="cboSqlEvent" name="cboSqlEvent">
            <option value="1" selected="selected" data-content="<span class='fa fa-flash fa-lg fa-fw' style='color:#FFC90E;'></span>&nbsp;@StringLocalizer["Before starting the process"]">@StringLocalizer["Before starting the process"]</option>
            <option value="2" data-content="<span class='fa fa-flash fa-lg fa-fw' style='color:#FFC90E;'></span>&nbsp;@StringLocalizer["After finishing the process"]">@StringLocalizer["After finishing the process"]</option>
        </select>
    </div>
    <div class="col-sm-8 @BootstrapHelper.TextRight" style="margin-top: 15px;">
        <span class="small text-info">@StringLocalizer["(Type Ctrl+Space to autocomplete)"]&nbsp;</span>
    </div>

</div>
<div class="row">
    <div id="divCommandBefore" class="@BootstrapHelper.FormGroup col-sm-12">
        <div class="well" style="margin-bottom:0px">
            <textarea class="form-control" cols="20" id="ProcessOptions_CommandBeforeProcess" name="ProcessOptions.CommandBeforeProcess" rows="5">@Model.CommandBeforeProcess</textarea>
        </div>
    </div>

    <div id="divCommandAfter" class="@BootstrapHelper.FormGroup col-sm-12" style="display:none;">
        <div class="well" style="margin-bottom:0px">
            <textarea class="form-control" cols="20" id="ProcessOptions_CommandAfterProcess" name="ProcessOptions.CommandAfterProcess" rows="5">@Model.CommandAfterProcess</textarea>
        </div>
    </div>

</div>
<hr />
<div class="row">
    <div class="@BootstrapHelper.FormGroup col-sm-3">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") data-placement="bottom">@StringLocalizer["Scope"]</label>
        <select class="form-control form-select" id="ProcessOptions_Scope" name="ProcessOptions.Scope">
            @foreach (ProcessScope scope in Enum.GetValues(typeof(ProcessScope)))
            {
                if (Model.Scope == scope)
                {
                    <option value="@((int)scope)" selected="selected">@scope</option>
                }
                else
                {
                    <option value="@((int)scope)">@scope</option>
                }
            }

        </select>

    </div>

    <div class="col-sm-9">
        <alert color="Info" title="@StringLocalizer["Scope of execution of the process."]" icon="IconType.InfoCircle">
            <b>@StringLocalizer["Global"]:</b>&nbsp;@StringLocalizer["Only one process from this element can be run at a time."]<br/>
            @StringLocalizer["and all users will be able to view the latest log and execution of an ongoing process."]
            <br/>
            <b>@StringLocalizer["User"]:</b>&nbsp;@StringLocalizer["Several users can run this process simultaneously, but only see the log and one run of your process."]
        </alert>
    </div>
</div>
