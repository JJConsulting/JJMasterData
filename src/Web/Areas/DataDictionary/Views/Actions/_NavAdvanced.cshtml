@using JJMasterData.Core.DataDictionary.Actions
@using JJMasterData.Core.Web
@inject IStringLocalizer<JJMasterDataResources> StringLocalizer

@model JJMasterData.Core.DataDictionary.Actions.Abstractions.BasicAction

<div class="row">
    <div class="@BootstrapHelper.FormGroup col-sm-6 required">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Expression that returns a Boolean at runtime"]">@StringLocalizer["Visible Expression"]</label>
        @Html.TextBoxFor(model => model.VisibleExpression, new { @class = "form-control" })
    </div>
    <div class="@BootstrapHelper.FormGroup col-sm-6 required">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Expression that returns a Boolean at runtime"]">@StringLocalizer["Enable Expression"]</label>
        @Html.TextBoxFor(model => model.EnableExpression, new { @class = "form-control" })
    </div>
</div>
<div class="row">
    <div class="@BootstrapHelper.FormGroup col-sm-6">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") title="@StringLocalizer["Action execution confirmation text"]">@StringLocalizer["Confirmation Message"]</label>
        @Html.TextBoxFor(model => model.ConfirmationMessage, new { @class = "form-control", placeholder = StringLocalizer["Are you sure you want to execute this action?"] })
    </div>
    <div class="@BootstrapHelper.FormGroup col-sm-6">
        <label class="@BootstrapHelper.Label">Css @StringLocalizer["Class"]</label>
        @Html.TextBoxFor(model => model.CssClass, new { @class = "form-control" })
    </div>
</div>
<div class="row">
    <div class="@BootstrapHelper.FormGroup col-sm-2">
        <label class="@BootstrapHelper.Label">@StringLocalizer["Order"]</label>
        @Html.TextBoxFor(model => model.Order, new { @class = "form-control" })
    </div>

    <div class="@BootstrapHelper.FormGroup col-sm-2">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") data-placement="bottom" title="@StringLocalizer["Display name in grid header"]">@StringLocalizer["Show Title"]</label>
        <div class="input-append">
            @Html.CheckBoxFor(model => model.ShowTitle, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
        </div>
    </div>

    <div class="@BootstrapHelper.FormGroup col-sm-2">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") data-placement="bottom" title="Exibir link como botão">@StringLocalizer["Show As Button"]</label>
        <div class="input-append">
            @Html.CheckBoxFor(model => model.ShowAsButton, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
        </div>
    </div>

    <div class="@BootstrapHelper.FormGroup col-sm-2">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") data-placement="bottom" title="@StringLocalizer["Set as default option"]">@StringLocalizer["Default"]</label>
        <div class="input-append">
            @Html.CheckBoxFor(model => model.IsDefaultOption, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
        </div>
    </div>
    <div class="@BootstrapHelper.FormGroup col-sm-2">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") data-placement="bottom" title="@StringLocalizer["View Grouped"]">@StringLocalizer["Is Group"]</label>
        <div class="input-append">
            @Html.CheckBoxFor(model => model.IsGroup, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
        </div>
    </div>
    <div class="@BootstrapHelper.FormGroup col-sm-2">
        <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") data-placement="bottom" title="@StringLocalizer["Make a menu separator before this action"]">@StringLocalizer["Divider Line"]</label>
        <div class="input-append">
            @Html.CheckBoxFor(model => model.DividerLine, new { @class = "form-control", data_toggle = "toggle", data_on = "Yes", data_off = "No", data_size = "small" })
        </div>
    </div>
    @if (ViewBag.ContextAction is ActionSource.FormToolbar)
    {
        <div class="@BootstrapHelper.FormGroup col-sm-2">
            <label class="@BootstrapHelper.Label" @BootstrapHelper.GetDataToggle("tooltip") data-placement="bottom" title="@StringLocalizer["Location of the action when in a relationship"]">@StringLocalizer["Location"]</label>
            <div class="input-append">
                <select asp-for="FormToolbarActionLocation" class="form-select" asp-items="Html.GetEnumSelectList<FormToolbarActionLocation>()"></select>
            </div>
        </div>
    }

</div>