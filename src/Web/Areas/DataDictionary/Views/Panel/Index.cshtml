@using JJMasterData.Core.DataDictionary.Models
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model JJMasterData.Core.DataDictionary.Models.FormElementPanel
@inject IStringLocalizer<MasterDataResources> StringLocalizer

@{
    ViewData["Title"] = $"{ViewBag.ElementName} - {StringLocalizer["Panels"]}";
}

<script type="text/javascript">
    $(document).ready(function () {
        sortableGrid();
        saveTabState();
    });

    function saveTabState() {
        let currentTab = document.querySelector("#selected-tab").value;
        if (!currentTab) {
            currentTab = "#div-general";
        }

        let tabLinks = document.querySelectorAll("[@BootstrapHelper.DataToggle='tab']");
        tabLinks.forEach(function(link) {
            if (link.getAttribute('href') === currentTab) {
                link.classList.add('active');
                link.classList.add('show');
            } else {
                link.classList.remove('active');
                link.classList.remove('remove');
            }
        });

        document.querySelectorAll(".tab-pane").forEach(function (tabPane){
            if (tabPane.id === currentTab.replace("#","")) {
                tabPane.classList.add('active');
                tabPane.classList.add('show');
            } else {
                tabPane.classList.remove('active');
                tabPane.classList.remove('remove');
            }
        })

        document.querySelector(currentTab).classList.add('active');
        document.querySelector(currentTab).classList.add('show');

        tabLinks.forEach(function(tabLink) {
            tabLink.addEventListener("click", function(e) {

                document.querySelector("#selected-tab").value = e.target.getAttribute("href");

                resizeContainer();
            });
        });
    }

    function sortableGrid() {
        $("#sortable-grid").sortable({
            update: function () {
                const order = $(this).sortable('toArray');
                moveFields(order);
            }
        }).disableSelection();
    }

    function moveFields(order) {
        const formData = new FormData();
        formData.append('fieldsOrder', order);
        fetch('@Url.Action("Sort", new { elementName = ViewBag.ElementName })', {
            method: "POST",
            body: formData
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('@StringLocalizer["Error while ordering fields."]');
                }
            })
            .catch(error => {
                messageBox.show('@StringLocalizer["Error"]', error.message, 4);
            });
    }

    function loadDetails(url, panelId) {
        document.querySelectorAll("#sortable-grid a").forEach(element => {
            element.classList.remove("active");
        });
        
        if (panelId !== "") {
            const panel = document.getElementById(panelId);
            if (panel) {
                panel.classList.add("active");
            }
        }
        
        fetch(url)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.text();
            })
            .then(data => {
                HTMLHelper.setInnerHTML("field-details", data);
                listenAllEvents("#field-details ");
                saveTabState();
                document.getElementById("selectedFields").value = "";
                let listSelected = "";
                $('#listSelected option').each(function () {
                    if (listSelected.length > 0)
                        listSelected = listSelected.concat(",");

                    listSelected = listSelected.concat($(this).val());
                });
                $("#selectedFields").val(listSelected);
            })
    }

    function searchFields(oDom) {
        const value = $(oDom).val().toLowerCase();
        $("#sortable-grid a").filter(function () {
            //procura por textos
            const textValues = $(this).clone().find('.bootstrap-select, .selectpicker, select').remove().end().text();
            const isSearch = textValues.toLowerCase().indexOf(value) > -1;

            $(this).toggle(isSearch);
        });
    }
</script>

<partial name="_Menu" model="@(new DataDictionaryViewModel(ViewBag.ElementName, ViewBag.MenuId))"/>

@using (Html.BeginMasterDataForm())
{
    <input type="hidden" name="selected-tab" id="selected-tab" value="@ViewBag.Tab"/>
    <input type="hidden" name="selectedFields" id="selectedFields" value="@Context.Request.Query["selectedFields"]"/>
    <input type="hidden" name="enabled_fields" id="enabled_fields" value="@Context.Request.Query["enabled_fields"]"/>

    <div class="row">
        <div class="col-sm-3">
            <div class="input-group jjform-action ">
                <input id="txtFilter" name="txtFilter" onkeyup="searchFields(this);" placeholder="Pesquisar..." type="text" class="form-control" data-bs-toggle="tooltip" aria-label="Filtre por qualquer campo visível na lista" data-bs-original-title="Filtre por qualquer campo visível na lista">
                <a href="javascript: void(0);" class="input-group-text link-underline link-underline-opacity-0" data-bs-toggle="tooltip" title="@StringLocalizer["Add"]" onclick="loadDetails('@Url.Action("Add", new { elementName = ViewBag.ElementName })', '');">
                    <span class="fa fa-plus  bi"></span>
                </a>
            </div>
            <br/>
            <div class="jjrelative">
                <div id="field-list">
                    <div class="list-group jj-list-group jjsortable" id="sortable-grid">
                        @{int nLine = 0;}
                        @if (ViewBag.Panels.Count == 0)
                        {
                            <div>@StringLocalizer["No record found"]</div>
                        }
                        @foreach (FormElementPanel panel in ViewBag.Panels)
                        {
                            nLine++;
                            <a href="javascript:loadDetails('@Url.Action("Detail", new { elementName = ViewBag.ElementName, panelId = panel.PanelId })', '@panel.PanelId' );"
                               class="list-group-item @(panel.PanelId.Equals(Model.PanelId) ? "active" : "")"
                               id="@panel.PanelId">
                                <div style="height: 33px;">
                                    <div class="@BootstrapHelper.PullLeft">
                                        <b>@panel.Title</b>
                                        <br>
                                        @panel.Layout.ToString()
                                    </div>
                                    <div class="@BootstrapHelper.PullRight jjsortable-icon" title="@StringLocalizer["Drag and drop to move"]">
                                    </div>
                                    <span class="@BootstrapHelper.PullRight jjsortable-span" title="@StringLocalizer["Drag and drop to move"]">
                                        @nLine.ToString()
                                    </span>
                                </div>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-9" style="padding-left:0px">
            <div class="jjrelative" id="field-details">
                <partial name="_Detail" model="Model"/>
            </div>
        </div>
        <br/>
    </div>
}