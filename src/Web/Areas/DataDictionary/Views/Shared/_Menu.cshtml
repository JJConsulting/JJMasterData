@using JJMasterData.Core.UI.Components
@using JJMasterData.Core.DataDictionary.Models

@inject IStringLocalizer<MasterDataResources> StringLocalizer
@inject JJMasterDataLogo MasterDataLogo

@model DataDictionaryViewModel;


@{
    var backUrl = Url.Action("Index", "Element")!;
    List<BreadcrumbItem> breadcrumbs = [new BreadcrumbItem(MasterDataLogo.GetHtmlBuilder(), backUrl), new BreadcrumbItem(StringLocalizer["Data Dictionary"], backUrl), new BreadcrumbItem(Model.ElementName)];
}

<script type="text/javascript" src="~/_content/JJMasterData.Web/js/highlightjs/highlight.min.js"></script>
<script type="text/javascript" src="~/_content/JJMasterData.Web/js/highlightjs/languages/tsql.min.js"></script>

<div class="mb-2 pb-2 border-bottom d-flex justify-content-between">
    <breadcrumb items="breadcrumbs" css-class=""/>
    <div>
        <a class="btn btn-secondary" href="javascript:defaultModal.showUrl('@Url.Action("ClassSourceCode", "Element", new { elementName = Model.ElementName })','@StringLocalizer["C# Class"]',1);" data-bs-toggle="tooltip" title="@StringLocalizer["C# Class"]">
            <span class="@IconType.Code.GetCssClass() fs-8">
            </span>
        </a>
        <a class="btn btn-secondary" href="javascript:defaultModal.showUrl('@Url.Action("Scripts", "Element", new { elementName = Model.ElementName })','@StringLocalizer["Database Scripts"]',1);" data-bs-toggle="tooltip" title="@StringLocalizer["Database Scripts"]">
            <span class="@IconType.SolidScroll.GetCssClass() fs-8">
            </span>
        </a>
        <a class="btn btn-secondary" href="javascript:window.open('@Url.Action("Render", "Form", new { area = "MasterData", elementName = Model.ElementName })', '_blank').focus();" data-bs-toggle="tooltip" title="@StringLocalizer["Render"]">
            <span class="@IconType.Play.GetCssClass() fs-8">
            </span>
        </a>
    </div>
</div>


<ul class="nav nav-tabs mb-3">
    @{
        NavItem("Entity", IconType.Database.GetCssClass(), Url.Action("Index", "Entity", new { elementName = Model.ElementName }));
        NavItem("Fields", IconType.RegularRectangleList.GetCssClass(), Url.Action("Index", "Field", new { elementName = Model.ElementName }));
        NavItem("Panels", "fa-solid fa-layer-group", Url.Action("Index", "Panel", new { elementName = Model.ElementName }));
        NavItem("Relationships", "fa-solid fa-code-branch", Url.Action("Index", "Relationships", new { elementName = Model.ElementName }));
        NavItem("Indexes", IconType.Indent.GetCssClass(), Url.Action("Index", "Indexes", new { elementName = Model.ElementName }));
        NavItem("Options", IconType.Gears.GetCssClass(), Url.Action("Index", "UIOptions", new { elementName = Model.ElementName }));
        NavItem("Actions", "fa-solid fa-bolt", Url.Action("Index", "Actions", new { elementName = Model.ElementName }));
        NavItem("WebApi", "fa-solid fa-globe", Url.Action("Index", "Api", new { elementName = Model.ElementName }));
    }
</ul>

@functions
{
    private string IsActive(string menuId)
    {
        string cssClass = string.Empty;

        if (Model.MenuId!.Equals(menuId))
        {
            cssClass += " active";
        }

        return cssClass;
    }

    private void NavItem(
        string label,
        string iconCssClass,
        string? url)
    {
        <li class="nav-item">
            <a class="nav-link @IsActive(label)" href="@url">
                <span class="@iconCssClass"></span>&nbsp;@StringLocalizer[label]
            </a>
        </li>
    }

}