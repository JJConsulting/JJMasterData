@using JJMasterData.Core.Web
@using JJMasterData.Core.Web.Components
@using JJMasterData.Core.Web.Factories
@using JJMasterData.Core.Web.Http.Abstractions
@using JJMasterData.Web.Extensions
@inject IHttpContext HttpContext
@inject IControlFactory<JJSearchBox> SearchBoxFactory
@model JJMasterData.Web.Areas.DataDictionary.Models.ViewModels.IconViewModel 

@* $1$ ReSharper disable once Html.IdNotResolved #1# *@
@* @{ *@
@*     var searchBox = SearchBoxFactory.Create(); *@
@*     searchBox.DataItem.ShowImageLegend = true; *@
@*     searchBox.DataItem.Items = Enum.GetValues<IconType>().Select(i => new DataItemValue(i.GetId().ToString(), i.GetDescription(), i, "6a6a6a")).ToList(); *@
@*     searchBox.SelectedValue = ((int)Model.SelectedIcon).ToString(); *@
@*     searchBox.Name = Model.InputId; *@
@* } *@

@if (BootstrapHelper.Version >= 4)
{
    @if (Model.EnablePopUp)
    {
        <a href="javascript: void(0);" @BootstrapHelper.GetDataToggle("tooltip") title="Search Icon" onclick="popup.showHtmlFromUrl('Icons','@Url.Action("Index", "Icons", new {inputId = Model.InputId})');" style="text-decoration:none">
            <span class="fa fa-search "></span>
        </a>
    }
    @* @Html.Raw(await searchBox.GetHtmlAsync()) *@
}
else
{
    <div class="input-group">
        @* @Html.Raw(await searchBox.GetHtmlAsync()) *@
        <span class="@BootstrapHelper.InputGroupBtn">
            <button class="@BootstrapHelper.DefaultButton" type="button" onclick="popup.showHtmlFromUrl('Icons','@Url.Action("Index", "Icons", new {inputId = Model.InputId})');">
                <span class="fa fa-search"></span>
            </button>
        </span>
    </div>
}